{"version":3,"sources":["shared/graphql/mutationForm.tsx","shared/graphql/queryList.tsx","shared/graphql/index.ts","shared/components/Icon/Icon.tsx","shared/components/Icon/index.ts","shared/components/Spin/Spin.tsx","shared/components/Spin/index.ts","shared/contexts/UIContext.ts","shared/utilities/capitalized.ts","shared/graphql/Setting/schema.gql.ts","shared/graphql/queryForm.tsx","core/graphql/core.ts","serviceWorker.ts","index.tsx","core/graphql/resolvers.ts","core/graphql/typeDefs.ts","core/graphql/client.ts","core/graphql/index.ts","shared/helpers/formatCurrency.ts","shared/helpers/formatValue.ts","app/pages/SalesPage/constants.ts","app/pages/SummarySalesReportPage/constants.ts","core/graphql/crud.ts","shared/utilities/errors.ts","core/route/Routing.tsx","core/route/index.ts","shared/utilities/message.ts","shared/helpers/formatDate.ts","app/pages/SettingPage/helpers.ts","core/storage/index.ts","core/graphql/auth.ts","core/log/index.tsx","app/shell/PageLoading.tsx","core/chunk/index.ts","app/pages/BuyPriceHistoryPage/chunk.ts","app/pages/HomePage/chunk.ts","app/pages/LoginPage/chunk.ts","app/pages/MasterCategoryPage/chunk.ts","app/pages/MasterMedicinePage/chunk.ts","app/pages/MasterSupplierPage/chunk.ts","app/pages/MasterUoMPage/chunk.ts","app/pages/MasterVariantPage/chunk.ts","app/pages/MedicineAlmostDepletedReportPage/chunk.ts","app/pages/MedicineAlmostExpiredReportPage/chunk.ts","app/pages/MedicineListReportPage/chunk.ts","app/pages/PurchaseListPage/chunk.ts","app/pages/PurchasePaymentPage/chunk.ts","app/pages/PurchaseReturnPage/chunk.ts","app/pages/SalesPage/chunk.ts","app/pages/SalesPage/SalesDetailResultPage.tsx","app/pages/SettingPage/chunk.ts","app/pages/SoldMedicineReportPage/chunk.ts","app/pages/StockCardPage/chunk.ts","app/pages/StockOpnamePage/chunk.ts","app/pages/SummarySalesReportPage/chunk.ts","app/pages/SummarySalesReportPage/SummarySalesReportResultPage.tsx","core/route/withQueryParams.tsx","app/Routes.tsx","app/shell/ErrorBoundary.tsx","app/shell/MainLayout.tsx","app/App.tsx","app/config.ts","app/index.ts","shared/utilities/progress.ts"],"names":["mutationForm","formType","mutations","resetForm","onCompleted","Progress","Message","Capitalized","onError","mutationError","ErrorHandler","fetchUser","action","data","loading","queryList","query","error","skip","variables","fetchPolicy","fetchMore","Icon","DownOutlined","barcode","BarcodeOutlined","back","LeftOutlined","category","ClusterOutlined","code","CodeOutlined","dashboard","DashboardOutlined","delete","DeleteOutlined","edit","EditOutlined","excel","FileExcelOutlined","global","GlobalOutlined","hdd","HddOutlined","history","HistoryOutlined","list","ProfileOutlined","LoadingOutlined","lock","LockOutlined","medicine_box","MedicineBoxOutlined","print","PrinterOutlined","payment","CreditCardOutlined","pending","FieldTimeOutlined","plus","PlusOutlined","read","EyeOutlined","report","BookOutlined","return","UndoOutlined","save","SaveOutlined","sales","MoneyCollectOutlined","search","SearchOutlined","select","CheckOutlined","setting","SettingOutlined","shop","ShopOutlined","smile","SmileOutlined","style","color","stock","StockOutlined","stock_card","LayoutOutlined","stock_opname","ProjectOutlined","supplier","AuditOutlined","transaction","TransactionOutlined","uom","GoldOutlined","user","UserOutlined","variant","PartitionOutlined","require","Spin","React","children","spinning","antIcon","className","indicator","tip","UIContext","isMobile","useUIContext","letter","replace","txt","charAt","toUpperCase","substr","toLowerCase","SETTING","gql","UPDATE_SETTING","getSettings","params","useQuery","setUpdateSettings","onComplete","useMutation","queryForm","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","resolvers","Mutation","updateCrud","_","payload","cache","__typename","writeData","createCrudData","updateAuth","isSessionAuthenticated","username","typeDefs","createClient","serverUri","modules","fragmentMatcher","IntrospectionFragmentMatcher","introspectionQueryResultData","__schema","types","InMemoryCache","forEach","module","onInitCache","httpLink","HttpLink","uri","moduleLink","reduce","link","onInitLink","undefined","concat","ApolloClient","Currency","value","isMinus","includes","minus","split","remainValue","length","result","thousands","join","slice","formatCurrency","e","currentTarget","toString","formatValue","formatPointValue","parseFloat","formatCommaValue","salesListColumns","dataIndex","key","sorter","title","en","id","salesDetailColumns","salesButton","pay","new","salesError","duplicate","not_found","required","salesField","no","cashier","date","change","total","note","salesForm","label","message","description","qty","payment_amount","medicine","salesModal","add","update","salesSummary","grand_total","paid_total","qty_total","moduleName","summarySalesButton","summarySalesTitle","summarySalesField","total_medicine","total_transaction","printed","summarySalesNoData","Crud","getCrud","createCrudModule","initialData","section","CRUD","UPDATE_CRUD","useCrud","graphQLErrors","map","extensions","path","messages","networkError","RouterContext","createContext","authPath","Router","isAuth","Provider","Route","authenticate","component","rest","useContext","Component","props","to","pathname","state","from","content","type","duration","AntMessage","info","success","warn","warning","convertMilisecondsToDate","miliseconds","moment","format","formatDate","formatDefaultDate","formatDefaultNextDate","formatDefaultMoment","formatDefaultPreviousMoment","subtract","formatFullDateTime","formatMoment","formatPresentDate","getLanguage","localStorage","getItem","createInMemoryStorage","name","get","JSON","parse","set","setItem","stringify","formatter","removeItem","createAuthTokenStorage","storage","getToken","setToken","deleteToken","createAuthData","createAuthModule","authLink","setContext","headers","prevContext","token","authorization","createAuthLink","UPDATE_AUTH","useIsAuthenticated","exitSession","graphqlClient","sentryErrorLogger","captureException","PageLoading","Loading","createElement","suspend","renderWhileLoading","Loadable","loader","BuyPriceHistoryPage","HomePage","LoginPage","MasterCategoryPage","MasterMedicinePage","MasterSupplierPage","MasterUoMPage","MasterVariantPage","MedicineAlmostDepletedReportPage","MedicineAlmostExpiredReportPage","MedicineListReportPage","PurchaseListPage","PurchasePaymentPage","PurchaseReturnPage","SalesPage","SalesDetailResultPage","lang","fetch","useState","init","setInit","useEffect","detail","matchMedia","addListener","mql","matches","sell_price","sub_total","SettingPage","SoldMedicineReportPage","StockCardPage","StockOpnamePage","SummarySalesReportPage","SummarySalesReportResultPage","WrappedComponent","WithQueryParams","this","qs","startsWith","substring","withRouter","withQueryParams","sold","Routes","exact","ErrorBoundary","hasError","renderOnError","MainLayout","enquireHandler","bind","unenquireScreen","enquireScreen","mobile","setState","UI","config","environment","process","graphqlServerUri","loggerDsn","authTokenStorage","logger","dsn","createLogger","MainErrorOverlay","App","client","locale","enGB","AppRoutes","isAuthenticated","getSettingsByCategory","find","start","nprogress","configure","showSpinner","done"],"mappings":"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","file":"static/js/main.f8192c8b.chunk.js","sourcesContent":["import * as React from 'react';\n\nimport { Capitalized } from '../utilities/capitalized';\nimport { ErrorHandler } from '../utilities/errors';\nimport { Message } from '../utilities/message';\nimport { Progress } from '../utilities/progress';\n\nexport function mutationForm({\n    formType,\n    mutations,\n    resetForm,\n}: {\n    formType: string;\n    mutations: any;\n    resetForm?: () => void;\n}) {\n    let [fetchUser, { data, loading }] = mutations({\n        onCompleted() {\n            Progress(false);\n            resetForm && formType === 'create' && resetForm();\n\n            return <>{Message(`${Capitalized(formType)} data successfully`, 'success')}</>;\n        },\n        onError(mutationError: any) {\n            Progress(false);\n            ErrorHandler(mutationError);\n        },\n    });\n\n    return {\n        action: fetchUser,\n        data,\n        loading,\n    };\n}\n","import { ErrorHandler } from '../utilities/errors';\n\nexport function queryList({\n    query,\n    skip,\n    variables,\n}: {\n    query: any;\n    skip?: boolean;\n    variables?: any;\n}) {\n    let { data, fetchMore, loading } = query({\n        onError(error: any) {\n            ErrorHandler(error);\n        },\n        skip,\n        variables,\n        fetchPolicy: 'cache-and-network',\n    });\n\n    return {\n        data,\n        fetchMore,\n        loading,\n    };\n}\n","export * from './mutationForm';\nexport * from './queryForm';\nexport * from './queryList';\n","import {\n    AuditOutlined,\n    BarcodeOutlined,\n    BookOutlined,\n    CheckOutlined,\n    ClusterOutlined,\n    CodeOutlined,\n    CreditCardOutlined,\n    DashboardOutlined,\n    DeleteOutlined,\n    DownOutlined,\n    EditOutlined,\n    EyeOutlined,\n    FieldTimeOutlined,\n    FileExcelOutlined,\n    GlobalOutlined,\n    GoldOutlined,\n    HddOutlined,\n    HistoryOutlined,\n    LayoutOutlined,\n    LeftOutlined,\n    LoadingOutlined,\n    LockOutlined,\n    MedicineBoxOutlined,\n    MoneyCollectOutlined,\n    PartitionOutlined,\n    PlusOutlined,\n    PrinterOutlined,\n    ProfileOutlined,\n    ProjectOutlined,\n    SaveOutlined,\n    SearchOutlined,\n    SettingOutlined,\n    ShopOutlined,\n    SmileOutlined,\n    StockOutlined,\n    TransactionOutlined,\n    UndoOutlined,\n    UserOutlined,\n} from '@ant-design/icons';\nimport * as React from 'react';\n\ninterface Icons {\n    [key: string]: JSX.Element;\n}\n\nexport const Icon: Icons = {\n    action: <DownOutlined />,\n    barcode: <BarcodeOutlined />,\n    back: <LeftOutlined />,\n    category: <ClusterOutlined />,\n    code: <CodeOutlined />,\n    dashboard: <DashboardOutlined />,\n    delete: <DeleteOutlined />,\n    edit: <EditOutlined />,\n    excel: <FileExcelOutlined />,\n    global: <GlobalOutlined />,\n    hdd: <HddOutlined />,\n    history: <HistoryOutlined />,\n    list: <ProfileOutlined />,\n    loading: <LoadingOutlined />,\n    lock: <LockOutlined />,\n    medicine_box: <MedicineBoxOutlined />,\n    print: <PrinterOutlined />,\n    payment: <CreditCardOutlined />,\n    pending: <FieldTimeOutlined />,\n    plus: <PlusOutlined />,\n    read: <EyeOutlined />,\n    report: <BookOutlined />,\n    return: <UndoOutlined />,\n    save: <SaveOutlined />,\n    sales: <MoneyCollectOutlined />,\n    search: <SearchOutlined />,\n    select: <CheckOutlined />,\n    setting: <SettingOutlined />,\n    shop: <ShopOutlined />,\n    smile: <SmileOutlined style={{ color: '#108ee9' }} />,\n    stock: <StockOutlined />,\n    stock_card: <LayoutOutlined />,\n    stock_opname: <ProjectOutlined />,\n    supplier: <AuditOutlined />,\n    transaction: <TransactionOutlined />,\n    uom: <GoldOutlined />,\n    user: <UserOutlined />,\n    variant: <PartitionOutlined />,\n};\n","export * from './Icon';\n","import { Spin as AntSpin } from 'antd';\nimport * as React from 'react';\n\nimport { Icon } from 'src/shared/components/Icon';\n\nrequire('./Spin.sass');\n\nexport interface SpinProps {\n    children?: React.ReactNode;\n    spinning?: boolean;\n}\n\nexport const Spin = React.memo<SpinProps>(({ children, spinning }) => {\n    let antIcon = <div className='spin_icon'>{Icon.loading}</div>;\n\n    return (\n        <AntSpin className='spin' indicator={antIcon} spinning={spinning} tip='Loading...'>\n            {children}\n        </AntSpin>\n    );\n});\n","export * from './Spin';\n","import * as React from 'react';\n\nexport interface UIContextValue {\n    isMobile: boolean;\n}\n\nconst UIContext = React.createContext<UIContextValue>({\n    isMobile: true,\n});\nexport default UIContext;\nexport const useUIContext = () => React.useContext(UIContext);\n","export function Capitalized(letter: string) {\n    return letter.replace(/\\w\\S*/g, function(txt) {\n        return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n    });\n}\n","import { Setting } from 'src/core/api';\nimport { gql, useMutation, useQuery } from 'src/core/graphql';\n\nexport const SETTING = gql`\n    query getSettingsByCategory($category: String) {\n        getSettingsByCategory(category: $category) {\n            type\n            value\n        }\n    }\n`;\n\nconst UPDATE_SETTING = gql`\n    mutation updateSetting($payload: [UpdateSettingPayload]) {\n        updateSetting(payload: $payload) {\n            category\n            type\n            value\n        }\n    }\n`;\n\nexport const getSettings = (params: any) =>\n    useQuery<{ getSettingsByCategory: Setting[] }>(SETTING, params);\nexport const setUpdateSettings = (onComplete: any) =>\n    useMutation<{ updateSetting: Setting }>(UPDATE_SETTING, onComplete);\n","import { ErrorHandler } from '../utilities/errors';\n\nexport function queryForm({\n    skip,\n    query,\n    variables,\n}: {\n    skip?: boolean;\n    query: any;\n    variables?: any;\n}) {\n    let { data, loading } = query({\n        onError(error: any) {\n            ErrorHandler(error);\n        },\n        skip,\n        variables,\n    });\n\n    return {\n        data,\n        loading,\n    };\n}\n","import { ApolloCache } from 'apollo-cache';\nimport { ApolloLink } from 'apollo-link';\n\nexport { useMutation, useQuery, useApolloClient as useClient } from '@apollo/react-hooks';\nexport { default as gql } from 'graphql-tag';\n\nexport interface Module<T = any> {\n    onInitCache?: (cache: ApolloCache<T>) => void;\n    onInitLink?: (link: ApolloLink | undefined) => ApolloLink;\n}\n","/* eslint-disable no-console */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n            window.location.href\n        );\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // eslint-disable-next-line max-len\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","import 'rc-drawer/assets/index.css';\nimport 'src/style/antd/_antd.less';\nimport 'src/style/index.sass';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createCrudData } from './crud';\nimport { Crud } from './types';\n\nexport const resolvers = {\n    Mutation: {\n        updateCrud: (_: any, { payload }: { payload: Crud }, { cache }: { cache: any }) => {\n            let data = { ...payload, __typename: 'Crud' };\n            cache.writeData(createCrudData(data));\n\n            return data;\n        },\n        updateAuth: (\n            _: any,\n            { payload }: { payload: { isSessionAuthenticated: boolean; username: string } },\n            { cache }: { cache: any }\n        ) => {\n            cache.writeData({\n                data: {\n                    isSessionAuthenticated: payload.isSessionAuthenticated,\n                    username: payload.username,\n                },\n            });\n\n            return payload.username;\n        },\n    },\n};\n","import gql from 'graphql-tag';\n\nexport const typeDefs = gql`\n    type Query {\n        getCrud: Crud\n        isSessionAuthenticated: Boolean!\n    }\n\n    type Mutation {\n        updateAuth(payload: UpdateAuthPayload): String\n        updateCrud(payload: UpdateCrudPayload): Crud\n    }\n\n    input UpdateCrudPayload {\n        action: String!\n        section: String!\n    }\n\n    input UpdateAuthPayload {\n        isSessionAuthenticated: Boolean\n        username: String\n    }\n\n    type Crud {\n        action: String\n        section: String\n    }\n`;\n","import { ApolloProvider } from '@apollo/react-hooks';\nimport { InMemoryCache, IntrospectionFragmentMatcher } from 'apollo-cache-inmemory';\nimport { ApolloClient } from 'apollo-client';\nimport { ApolloLink } from 'apollo-link';\nimport { HttpLink } from 'apollo-link-http';\n\nimport { Module } from './core';\nimport { resolvers } from './resolvers';\nimport { typeDefs } from './typeDefs';\n\nexport const createClient = ({ serverUri, modules }: { serverUri: string; modules: Module[] }) => {\n    const fragmentMatcher = new IntrospectionFragmentMatcher({\n        introspectionQueryResultData: {\n            __schema: {\n                types: [],\n            },\n        },\n    });\n    const cache = new InMemoryCache({ fragmentMatcher });\n    modules.forEach((module) => module.onInitCache && module.onInitCache(cache));\n\n    const httpLink = new HttpLink({ uri: serverUri });\n    const moduleLink = modules.reduce<ApolloLink | undefined>((link, module) => {\n        if (module.onInitLink) return module.onInitLink(link);\n        return link;\n    }, undefined);\n    const link = moduleLink ? moduleLink.concat(httpLink) : httpLink;\n\n    return new ApolloClient({\n        link,\n        cache,\n        resolvers,\n        typeDefs,\n    });\n};\n\nexport { ApolloProvider as GraphqlProvider };\n","export * from './client';\nexport * from './core';\n","export function Currency(value: string) {\n    let isMinus = false;\n    if (value.includes('-')) {\n        let minus = value.split('-');\n        value = minus[1];\n        isMinus = true;\n    }\n    let split = value.split(',');\n    let remainValue = split[0].length % 3;\n    let result = split[0].substr(0, remainValue);\n    let thousands = split[0].substr(remainValue).match(/\\d{1,3}/gi);\n    if (thousands) {\n        let separator = remainValue ? '.' : '';\n        result += separator + thousands.join('.');\n    }\n\n    result = isMinus ? '-' + result : result;\n\n    return split[1] !== undefined ? result + ',' + split[1].slice(0, 2) : result;\n}\n\nexport function formatCurrency(e: any) {\n    return Currency(e.currentTarget.value.replace(/[^,\\d]/g, '').toString());\n}\n","export function formatValue(value: number | string) {\n    value = value.toString().replace(/\\./g, '');\n    value = formatPointValue(value);\n\n    return parseFloat(value);\n}\n\nexport function formatCommaValue(value: number | string) {\n    return value.toString().replace(/\\./g, ',');\n}\n\nexport function formatPointValue(value: number | string) {\n    return value.toString().replace(/,/g, '.');\n}\n","export const salesListColumns = [\n    {\n        dataIndex: 'no',\n        key: 'no',\n        sorter: true,\n        title: { en: 'Transaction No', id: 'No Transaksi' },\n    },\n    {\n        dataIndex: 'date',\n        key: 'date',\n        sorter: true,\n        title: { en: 'Date', id: 'Tanggal' },\n    },\n    {\n        dataIndex: 'qty_total',\n        key: 'qty_total',\n        title: { en: 'Qty Total', id: 'Jumlah Total' },\n    },\n    {\n        dataIndex: 'grand_total',\n        key: 'grand_total',\n        title: { en: 'Grand Total', id: 'Total Keseluruhan' },\n    },\n    {\n        dataIndex: 'payment_total',\n        key: 'payment_total',\n        title: { en: 'Payment Total', id: 'Total Pembayaran' },\n    },\n    {\n        dataIndex: 'change_total',\n        key: 'change_total',\n        title: { en: 'Change Total', id: 'Total Kembalian' },\n    },\n];\n\nexport const salesDetailColumns = [\n    {\n        dataIndex: 'code',\n        key: 'code',\n        title: { en: 'Code', id: 'Kode' },\n    },\n    {\n        dataIndex: 'medicine',\n        key: 'medicine',\n        title: { en: 'Medicine', id: 'Obat' },\n    },\n    {\n        dataIndex: 'qty',\n        key: 'qty',\n        title: { en: 'Qty', id: 'Jumlah' },\n    },\n    {\n        dataIndex: 'uom',\n        key: 'uom',\n        title: { en: 'UoM', id: 'Satuan' },\n    },\n    {\n        dataIndex: 'sell_price',\n        key: 'sell_price',\n        title: { en: 'Sell Price', id: 'Harga Jual' },\n    },\n    {\n        dataIndex: 'sub_total',\n        key: 'sub_total',\n        title: { en: 'Sub Total', id: 'Sub Total' },\n    },\n];\n\nexport const salesButton = {\n    pay: { en: 'Pay', id: 'Bayar' },\n    new: { en: 'New', id: 'Baru' },\n    pending: { en: 'Pending', id: 'Tunda' },\n    print: { en: 'Print', id: 'Cetak' },\n};\n\nexport const salesError = {\n    duplicate: {\n        en: 'Data already exist!',\n        id: 'Data sudah ada!',\n    },\n    not_found: {\n        en: 'Medicine not found!',\n        id: 'Obat tidak ditemukan!',\n    },\n    required: {\n        en: 'Fill detail first!',\n        id: 'Isi detail terlebih dahulu',\n    },\n    stock: {\n        en: 'Stock is not enough!',\n        id: 'Stock tidak mencukupi!',\n    },\n};\n\nexport const salesField = {\n    no: { en: 'Transaction No', id: 'No Transaksi' },\n    cashier: { en: 'Cashier', id: 'Kasir' },\n    date: { en: 'Date', id: 'Tanggal' },\n    payment: { en: 'Payment', id: 'Bayar' },\n    change: { en: 'Change', id: 'Kembalian' },\n    total: { en: 'Total', id: 'Total' },\n    note: {\n        en: 'Product that have been purchased cannot be returned unless there is an agreement',\n        id: 'Barang yang telah dibeli tidak dapat dikembalikan kecuali ada perjanjian',\n    },\n};\n\nexport const salesForm = {\n    no: {\n        label: { en: 'Transaction No', id: 'No Transaksi' },\n    },\n    date: {\n        label: { en: 'Date', id: 'Tanggal' },\n        message: { en: 'Please input the date', id: 'Mohon isi tanggal' },\n    },\n    supplier: {\n        label: { en: 'Supplier', id: 'Pemasok' },\n        message: { en: 'Please select the supplier', id: 'Mohon pilih pemasok' },\n    },\n    description: {\n        label: { en: 'Description', id: 'Deskripsi' },\n    },\n    qty: {\n        label: { en: 'Qty', id: 'Jumlah' },\n        message: { en: 'Please input the qty', id: 'Mohon isi jumlah' },\n    },\n    payment_amount: {\n        label: { en: 'Payment Amount', id: 'Jumlah Pembayaran' },\n    },\n    medicine: {\n        label: { en: 'Medicine', id: 'Obat' },\n    },\n    code: {\n        label: { en: 'Code', id: 'Kode' },\n    },\n};\n\nexport const salesModal = {\n    add: {\n        title: { en: 'Add Product', id: 'Tambah Produk' },\n    },\n    update: {\n        title: { en: 'Update Product', id: 'Perbaharui Produk' },\n    },\n};\n\nexport const salesSummary = {\n    payment: { en: 'Payment', id: 'Pembayaran' },\n    grand_total: { en: 'Grand Total', id: 'Total Keseluruhan' },\n    paid_total: { en: 'Paid Total', id: 'Total Bayar' },\n    change: { en: 'Change', id: 'Kembalian' },\n    qty_total: { en: 'Qty Total', id: 'Jumlah Total' },\n    total: { en: 'Total', id: 'Total' },\n};\n\nexport const moduleName = 'Sales';\nexport const title = 'Sales';\n","export const summarySalesButton = { en: 'Print', id: 'Cetak' };\nexport const summarySalesTitle = { en: 'Print Summary Sales', id: 'Cetak Rangkuman Penjualan' };\nexport const summarySalesField = {\n    date: { en: 'Date', id: 'Tanggal' },\n    total_medicine: { en: 'Total Medicine Sold', id: 'Total Obat Terjual' },\n    total_transaction: { en: 'Total Transaction', id: 'Total Transaksi' },\n    total: { en: 'Total', id: 'Total' },\n    printed: { en: 'Printed At', id: 'Dicetak' },\n    title: { en: 'Summary Sales', id: 'Rangkuman Penjualan' },\n    user: { en: 'User', id: 'Pengguna' },\n};\nexport const summarySalesNoData = {\n    en: 'No Data',\n    id: 'Tidak Ada Data',\n};\n","import { gql, useQuery, useMutation } from './core';\nimport { Crud } from './types';\n\nexport const createCrudData = (Crud: any) => ({\n    data: {\n        getCrud: Crud,\n    },\n});\n\nexport const createCrudModule = () => {\n    const initialData: Crud = {\n        action: 'back',\n        section: 'main',\n        __typename: 'Crud',\n    };\n\n    return {\n        onInitCache: (cache: any) => cache.writeData(createCrudData(initialData)),\n    };\n};\n\nexport const CRUD = gql`\n    query getCrud {\n        getCrud @client {\n            action\n            section\n        }\n    }\n`;\nconst getCrud = () => useQuery<{ getCrud: Crud }>(CRUD);\n\nexport const UPDATE_CRUD = gql`\n    mutation updateCrud($payload: UpdateCrudPayload) {\n        updateCrud(payload: $payload) @client {\n            action\n            section\n        }\n    }\n`;\n\nexport const updateCrud = () => useMutation<{ updateCrud: Crud }>(UPDATE_CRUD);\n\nexport const useCrud = () => {\n    let { data } = getCrud();\n    return data!.getCrud;\n};\n","import { ApolloError } from 'apollo-client';\n\nimport { Message } from './message';\n\nexport function ErrorHandler(error?: ApolloError) {\n    if (error!.graphQLErrors)\n        error!.graphQLErrors.map(({ extensions, message, path }) => {\n            let messages = `[GraphQL error]: Message: ${message}, Path: ${path}`;\n            if (extensions && extensions.code === 'BAD_USER_INPUT') {\n                messages = `[Validation Error]: Message: ${message}, Path: ${path}`;\n            }\n            Message(messages, 'error');\n        });\n\n    if (error!.networkError) Message(`[Network error]: ${error!.networkError}`, 'error');\n\n    return null;\n}\n","import React, { createContext, useContext } from 'react';\nimport { BrowserRouter, Redirect, Route as RouteLib, RouteProps, Switch } from 'react-router-dom';\n\nconst DEFAULT_AUTH_PATH = '/login';\n\nconst RouterContext = createContext<{ authPath: string; isAuth?: boolean }>({\n    authPath: DEFAULT_AUTH_PATH,\n});\n\nexport const Router: React.FC<{\n    authPath: string;\n    isAuth?: boolean;\n}> = ({ children, authPath, isAuth }) => (\n    <RouterContext.Provider value={{ authPath, isAuth }}>\n        <BrowserRouter>\n            <Switch>{children}</Switch>\n        </BrowserRouter>\n    </RouterContext.Provider>\n);\n\nexport const Route: React.FC<{ authenticate?: boolean } & RouteProps> = ({\n    children,\n    authenticate,\n    component,\n    ...rest\n}) => {\n    const { authPath, isAuth } = useContext(RouterContext);\n    const Component = component as any;\n    return (\n        <RouteLib\n            {...rest}\n            render={({ location, ...props }) =>\n                authenticate && !isAuth ? (\n                    <Redirect\n                        to={{\n                            pathname: authPath,\n                            state: { from: location },\n                        }}\n                    />\n                ) : (\n                    <Component location={location} {...props} />\n                )\n            }\n        />\n    );\n};\n","export * from './Routing';\nexport { Link, useHistory, useLocation } from 'react-router-dom';\n","import { message as AntMessage } from 'antd';\nimport React from 'react';\n\nexport function Message(\n    content: React.ReactNode | string,\n    type: string,\n    duration?: number | (() => void)\n) {\n    switch (type) {\n        case 'error':\n            return AntMessage.error(content, duration);\n        case 'info':\n            return AntMessage.info(content, duration);\n        case 'loading':\n            return AntMessage.loading(content, duration);\n        case 'success':\n            return AntMessage.success(content, duration);\n        case 'warn':\n            return AntMessage.warn(content, duration);\n        case 'warning':\n            return AntMessage.warning(content, duration);\n        default:\n            return null;\n    }\n}\n","import moment, { Moment } from 'moment';\n\nexport function convertMilisecondsToDate(miliseconds: string) {\n    return moment(miliseconds, 'x').format('DD-MM-YYYY');\n}\n\nexport function formatDate(date: Moment) {\n    return moment(date).format('DD-MM-YYYY');\n}\n\nexport function formatDefaultDate(date: string) {\n    return moment(date, 'DD-MM-YYYY').format('YYYY-MM-DD');\n}\n\nexport function formatDefaultNextDate(date: string) {\n    return moment(date, 'DD-MM-YYYY')\n        .add('days', 1)\n        .format('YYYY-MM-DD');\n}\n\nexport function formatDefaultMoment(date: string) {\n    return moment(date, 'YYYY-MM-DD');\n}\n\nexport function formatDefaultPreviousMoment(date: string) {\n    return moment(date, 'YYYY-MM-DD').subtract('days', 1);\n}\n\nexport function formatFullDateTime(date: Moment) {\n    return moment(date).format('DD MMM YYYY HH:mm:ss');\n}\n\nexport function formatMoment(date: string) {\n    return moment(date, 'DD-MM-YYYY');\n}\n\nexport function formatPresentDate(date: string) {\n    return moment(date, 'YYYY-MM-DD').format('DD-MM-YYYY');\n}\n","import { SettingLanguage } from 'src/core/api';\n\nexport function getLanguage(): SettingLanguage {\n    return localStorage.getItem('language') === 'English' ? 'en' : 'id';\n}\n","export const createInMemoryStorage = <T>(name: string) => {\n    const parser = (value: string | null) => (value ? (JSON.parse(value).value as T) : null);\n    const formatter = (value: T) => JSON.stringify({ value });\n    return {\n        get: () => parser(localStorage.getItem(name)),\n        set: (value: T) => localStorage.setItem(name, formatter(value)),\n        delete: () => localStorage.removeItem(name),\n    };\n};\n","import { setContext } from 'apollo-link-context';\n\nimport { graphqlClient } from 'src/app';\n\nimport { createInMemoryStorage } from 'src/core/storage';\n\nimport { gql, Module, useQuery, useMutation } from './core';\n\nconst TOKEN_STORAGE_KEY = 'auth';\n\nexport const createAuthLink = ({ storage }: { storage: { getToken: () => string | null } }) =>\n    setContext((_, { headers, ...prevContext }: { headers: { [key: string]: string } }) => {\n        const token = storage.getToken();\n        return {\n            ...prevContext,\n            headers: {\n                ...headers,\n                authorization: token ? `Bearer ${token}` : '',\n            },\n        };\n    });\n\nexport const createAuthTokenStorage = () => {\n    const storage = createInMemoryStorage<string>(TOKEN_STORAGE_KEY);\n    return {\n        getToken: storage.get,\n        setToken: storage.set,\n        deleteToken: storage.delete,\n    };\n};\n\nexport const createAuthData = (isSessionAuthenticated: boolean) => ({\n    data: {\n        isSessionAuthenticated,\n    },\n});\n\nexport const createAuthModule: (dependencies: {\n    storage: { getToken: () => string | null };\n}) => Module = ({ storage }) => {\n    const authLink = createAuthLink({ storage });\n    return {\n        onInitCache: (cache) => cache.writeData(createAuthData(!!storage.getToken())),\n        onInitLink: (link) => (link ? link.concat(authLink) : authLink),\n    };\n};\n\nexport const useSession = () =>\n    useQuery<{ isSessionAuthenticated: boolean }>(gql`\n        query IsSessionAuthenticated {\n            isSessionAuthenticated @client\n        }\n    `);\n\nexport const UPDATE_AUTH = gql`\n    mutation updateAuth($payload: UpdateAuthPayload) {\n        updateAuth(payload: $payload) @client\n    }\n`;\n\nexport const updateAuth = () =>\n    useMutation<{ updateAuth: string }>(UPDATE_AUTH, {\n        update(cache, { data }) {\n            let token = data?.updateAuth;\n            if (token) {\n                createAuthTokenStorage().setToken(token);\n            }\n        },\n    });\n\nexport const useIsAuthenticated = () => {\n    let { loading, error, data } = useSession();\n    if (loading || error) return false;\n    return data?.isSessionAuthenticated || false;\n};\n\nexport const exitSession = () => {\n    createAuthTokenStorage().deleteToken();\n    localStorage.removeItem('greeting');\n    graphqlClient.cache.writeData(createAuthData(false));\n};\n","import { captureException, init } from '@sentry/browser';\n\nexport const createLogger = ({\n    environment,\n    dsn,\n}: {\n    environment: 'development' | 'production' | 'test';\n    dsn: string;\n}) => {\n    init({\n        dsn,\n        environment,\n    });\n\n    return {\n        error: sentryErrorLogger,\n    };\n};\n\nconst sentryErrorLogger = (error: Error) => {\n    if (error) {\n        captureException(error);\n    }\n};\n","import React from 'react';\n\nimport { LoadingComponent } from 'src/core/chunk';\n\nimport { Spin } from 'src/shared/components/Spin';\n\nexport const PageLoading: LoadingComponent = ({ error }, props) => {\n    if (error) {\n        throw error;\n    }\n    return <Spin spinning>{props.children}</Spin>;\n};\n","import React from 'react';\nimport Loadable from 'react-loadable';\n\nconst Loading = () => React.createElement('div');\n\nexport type LoadingComponent = React.FC<Loadable.LoadingComponentProps>;\n\nexport const suspend = ({\n    component,\n    renderWhileLoading,\n}: {\n    component: () => Promise<any>;\n    renderWhileLoading?: LoadingComponent;\n}) =>\n    Loadable({\n        loader: component,\n        loading: renderWhileLoading || Loading,\n    });\n","import { PageLoading } from 'src/app/shell/PageLoading';\n\nimport { suspend } from 'src/core/chunk';\n\nexport const BuyPriceHistoryPage = suspend({\n    component: () => import(/* webpackChunkName: \"BuyPriceHistoryPage\" */ './index'),\n    renderWhileLoading: PageLoading,\n});\n","import { PageLoading } from 'src/app/shell/PageLoading';\n\nimport { suspend } from 'src/core/chunk';\n\nexport const HomePage = suspend({\n    component: () => import(/* webpackChunkName: \"HomePage\" */ './index'),\n    renderWhileLoading: PageLoading,\n});\n","import { PageLoading } from 'src/app/shell/PageLoading';\n\nimport { suspend } from 'src/core/chunk';\n\nexport const LoginPage = suspend({\n    component: () => import(/* webpackChunkName: \"LoginPage\" */ './index'),\n    renderWhileLoading: PageLoading,\n});\n","import { PageLoading } from 'src/app/shell/PageLoading';\n\nimport { suspend } from 'src/core/chunk';\n\nexport const MasterCategoryPage = suspend({\n    component: () => import(/* webpackChunkName: \"MasterCategoryPage\" */ './index'),\n    renderWhileLoading: PageLoading,\n});\n","import { PageLoading } from 'src/app/shell/PageLoading';\n\nimport { suspend } from 'src/core/chunk';\n\nexport const MasterMedicinePage = suspend({\n    component: () => import(/* webpackChunkName: \"MasterMedicinePage\" */ './index'),\n    renderWhileLoading: PageLoading,\n});\n","import { PageLoading } from 'src/app/shell/PageLoading';\n\nimport { suspend } from 'src/core/chunk';\n\nexport const MasterSupplierPage = suspend({\n    component: () => import(/* webpackChunkName: \"MasterSupplierPage\" */ './index'),\n    renderWhileLoading: PageLoading,\n});\n","import { PageLoading } from 'src/app/shell/PageLoading';\n\nimport { suspend } from 'src/core/chunk';\n\nexport const MasterUoMPage = suspend({\n    component: () => import(/* webpackChunkName: \"MasterUoMPage\" */ './index'),\n    renderWhileLoading: PageLoading,\n});\n","import { PageLoading } from 'src/app/shell/PageLoading';\n\nimport { suspend } from 'src/core/chunk';\n\nexport const MasterVariantPage = suspend({\n    component: () => import(/* webpackChunkName: \"MasterVariantPage\" */ './index'),\n    renderWhileLoading: PageLoading,\n});\n","import { PageLoading } from 'src/app/shell/PageLoading';\n\nimport { suspend } from 'src/core/chunk';\n\nexport const MedicineAlmostDepletedReportPage = suspend({\n    component: () => import(/* webpackChunkName: \"MedicineAlmostDepletedReportPage\" */ './index'),\n    renderWhileLoading: PageLoading,\n});\n","import { PageLoading } from 'src/app/shell/PageLoading';\n\nimport { suspend } from 'src/core/chunk';\n\nexport const MedicineAlmostExpiredReportPage = suspend({\n    component: () => import(/* webpackChunkName: \"MedicineAlmostExpiredReportPage\" */ './index'),\n    renderWhileLoading: PageLoading,\n});\n","import { PageLoading } from 'src/app/shell/PageLoading';\n\nimport { suspend } from 'src/core/chunk';\n\nexport const MedicineListReportPage = suspend({\n    component: () => import(/* webpackChunkName: \"MedicineListReportPage\" */ './index'),\n    renderWhileLoading: PageLoading,\n});\n","import { PageLoading } from 'src/app/shell/PageLoading';\n\nimport { suspend } from 'src/core/chunk';\n\nexport const PurchaseListPage = suspend({\n    component: () => import(/* webpackChunkName: \"PurchaseListPage\" */ './index'),\n    renderWhileLoading: PageLoading,\n});\n","import { PageLoading } from 'src/app/shell/PageLoading';\n\nimport { suspend } from 'src/core/chunk';\n\nexport const PurchasePaymentPage = suspend({\n    component: () => import(/* webpackChunkName: \"PurchasePaymentPage\" */ './index'),\n    renderWhileLoading: PageLoading,\n});\n","import { PageLoading } from 'src/app/shell/PageLoading';\n\nimport { suspend } from 'src/core/chunk';\n\nexport const PurchaseReturnPage = suspend({\n    component: () => import(/* webpackChunkName: \"PurchaseReturnPage\" */ './index'),\n    renderWhileLoading: PageLoading,\n});\n","import { PageLoading } from 'src/app/shell/PageLoading';\n\nimport { suspend } from 'src/core/chunk';\n\nexport const SalesPage = suspend({\n    component: () => import(/* webpackChunkName: \"SalesPage\" */ './index'),\n    renderWhileLoading: PageLoading,\n});\n","import React from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\n\nimport { SalesDetail } from 'src/core/api';\nimport { updateCrud } from 'src/core/graphql/crud';\n\nimport { formatPresentDate } from 'src/shared/helpers/formatDate';\nimport { Currency } from 'src/shared/helpers/formatCurrency';\nimport { formatCommaValue } from 'src/shared/helpers/formatValue';\n\nimport { getLanguage } from '../SettingPage/helpers';\nimport { salesField } from './constants';\n\nexport const SalesDetailResultPage = ({ history, location }: RouteComponentProps) => {\n    let lang = getLanguage();\n    let [fetch] = updateCrud();\n    let [init, setInit] = React.useState(false);\n    React.useEffect(() => {\n        if (!init) {\n            window.print();\n            setInit(true);\n        }\n    }, [init]);\n\n    if (!location.state) return null;\n\n    let { cashier, change, date, detail, no, payment, total } = location.state;\n\n    if (window.matchMedia) {\n        var mediaQueryList = window.matchMedia('print');\n        mediaQueryList.addListener(function(mql) {\n            if (!mql.matches) {\n                if (location.state.list) {\n                    fetch({ variables: { payload: { action: 'list', section: 'sales' } } });\n                    history.replace('/sales');\n                } else {\n                    fetch({ variables: { payload: { action: 'create', section: 'sales' } } });\n                    history.replace('/sales?create');\n                }\n            }\n        });\n    }\n\n    return (\n        <div className='p-2 typo-display-3'>\n            <div>APOTEK HOSANNA</div>\n            <div>Palazzo Park blok A 5012, Sidoarjo</div>\n            <div>Telp: 031-99031371</div>\n            <br />\n            <div className='d-flex fj-between'>\n                <div>{salesField.no[lang]}</div>\n                <div>{no}</div>\n            </div>\n            <div className='d-flex fj-between'>\n                <div>{salesField.date[lang]}</div>\n                <div>{formatPresentDate(date)}</div>\n            </div>\n            <div className='d-flex fj-between'>\n                <div>{salesField.cashier[lang]}</div>\n                <div>{cashier}</div>\n            </div>\n            <div>----------------------------------------------</div>\n            {detail.map((detail: SalesDetail) => (\n                <div className='d-flex fd-column fj-between' key={detail.medicine!.code}>\n                    <div>{detail.medicine!.name}</div>\n                    <div className='d-flex fj-between'>\n                        <div>\n                            {detail.qty} x {Currency(formatCommaValue(detail.sell_price))} =\n                        </div>\n                        <div>{Currency(formatCommaValue(detail.sub_total))}</div>\n                    </div>\n                </div>\n            ))}\n            <div>----------------------------------------------</div>\n            <div className='d-flex fj-between'>\n                <div>{salesField.total[lang]}</div>\n                <div>{Currency(formatCommaValue(total))}</div>\n            </div>\n            <div className='d-flex fj-between'>\n                <div>{salesField.payment[lang]}</div>\n                <div>{Currency(formatCommaValue(payment))}</div>\n            </div>\n            <div className='d-flex fj-end'>\n                <div>----------------</div>\n            </div>\n            <div className='d-flex fj-between'>\n                <div>{salesField.change[lang]}</div>\n                <div>{Currency(formatCommaValue(change))}</div>\n            </div>\n            <br />\n            <div>{salesField.note[lang]}</div>\n        </div>\n    );\n};\n","import { PageLoading } from 'src/app/shell/PageLoading';\n\nimport { suspend } from 'src/core/chunk';\n\nexport const SettingPage = suspend({\n    component: () => import(/* webpackChunkName: \"SettingPage\" */ './SettingPage'),\n    renderWhileLoading: PageLoading,\n});\n","import { PageLoading } from 'src/app/shell/PageLoading';\n\nimport { suspend } from 'src/core/chunk';\n\nexport const SoldMedicineReportPage = suspend({\n    component: () => import(/* webpackChunkName: \"SoldMedicineReportPage\" */ './index'),\n    renderWhileLoading: PageLoading,\n});\n","import { PageLoading } from 'src/app/shell/PageLoading';\n\nimport { suspend } from 'src/core/chunk';\n\nexport const StockCardPage = suspend({\n    component: () => import(/* webpackChunkName: \"StockCardPage\" */ './index'),\n    renderWhileLoading: PageLoading,\n});\n","import { PageLoading } from 'src/app/shell/PageLoading';\n\nimport { suspend } from 'src/core/chunk';\n\nexport const StockOpnamePage = suspend({\n    component: () => import(/* webpackChunkName: \"StockOpnamePage\" */ './index'),\n    renderWhileLoading: PageLoading,\n});\n","import { PageLoading } from 'src/app/shell/PageLoading';\n\nimport { suspend } from 'src/core/chunk';\n\nexport const SummarySalesReportPage = suspend({\n    component: () => import(/* webpackChunkName: \"SummarySalesReportPage\" */ './index'),\n    renderWhileLoading: PageLoading,\n});\n","import moment from 'moment';\nimport React from 'react';\n\nimport { formatFullDateTime, formatPresentDate } from 'src/shared/helpers/formatDate';\nimport { withQueryParams } from 'src/core/route/withQueryParams';\nimport { Currency } from 'src/shared/helpers/formatCurrency';\nimport { formatCommaValue } from 'src/shared/helpers/formatValue';\n\nimport { getLanguage } from '../SettingPage/helpers';\nimport { summarySalesField } from './constants';\n\ninterface SummarySalesReportResultPageProps {\n    query: { date: string; sold: string; total: string; transaction: string; user: string };\n}\n\nexport const SummarySalesReportResultPage = withQueryParams(\n    ({ query }: SummarySalesReportResultPageProps) => {\n        let lang = getLanguage();\n        let [init, setInit] = React.useState(false);\n        React.useEffect(() => {\n            if (!init) {\n                window.print();\n                setInit(true);\n            }\n        }, [init]);\n\n        return (\n            <div className='p-2 typo-display-3'>\n                <div>APOTEK HOSANNA</div>\n                <div>Palazzo Park blok A 5012, Sidoarjo</div>\n                <div>Telp: 031-99031371</div>\n                <br />\n                <div>{summarySalesField.title[lang]}</div>\n                <div>----------------------------------------------</div>\n                <div className='d-flex fj-between'>\n                    <div>{summarySalesField.user[lang]}</div>\n                    <div>{query.user}</div>\n                </div>\n                <div className='d-flex fj-between'>\n                    <div>{summarySalesField.date[lang]}</div>\n                    <div>{formatPresentDate(query.date)}</div>\n                </div>\n                <div>----------------------------------------------</div>\n                <div className='d-flex fj-between'>\n                    <div>{summarySalesField.total_medicine[lang]}</div>\n                    <div>{query.sold}</div>\n                </div>\n                <div className='d-flex fj-between'>\n                    <div>{summarySalesField.total_transaction[lang]}</div>\n                    <div>{query.transaction}</div>\n                </div>\n                <div className='d-flex fj-between'>\n                    <div>{summarySalesField.total[lang]}</div>\n                    <div>{Currency(formatCommaValue(query.total))}</div>\n                </div>\n                <div>\n                    {summarySalesField.printed[lang]} : {formatFullDateTime(moment())}\n                </div>\n            </div>\n        );\n    }\n);\n","import { parse } from 'qs';\nimport * as React from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router';\n\nexport function withQueryParams(WrappedComponent: any) {\n    class WithQueryParams extends React.Component<RouteComponentProps<{}>> {\n        render() {\n            let search = this.props.location.search;\n            let qs = search.startsWith('?') ? parse(search.substring(1)) : null;\n            return <WrappedComponent {...this.props} query={qs} />;\n        }\n    }\n\n    return withRouter(WithQueryParams) as any;\n}\n","import React from 'react';\n\nimport { Route, Router } from 'src/core/route';\n\nimport { BuyPriceHistoryPage } from './pages/BuyPriceHistoryPage/chunk';\nimport { HomePage } from './pages/HomePage/chunk';\nimport { LoginPage } from './pages/LoginPage/chunk';\nimport { MasterCategoryPage } from './pages/MasterCategoryPage/chunk';\nimport { MasterMedicinePage } from './pages/MasterMedicinePage/chunk';\nimport { MasterSupplierPage } from './pages/MasterSupplierPage/chunk';\nimport { MasterUoMPage } from './pages/MasterUoMPage/chunk';\nimport { MasterVariantPage } from './pages/MasterVariantPage/chunk';\nimport { MedicineAlmostDepletedReportPage } from './pages/MedicineAlmostDepletedReportPage/chunk';\nimport { MedicineAlmostExpiredReportPage } from './pages/MedicineAlmostExpiredReportPage/chunk';\nimport { MedicineListReportPage } from './pages/MedicineListReportPage/chunk';\nimport { PurchaseListPage } from './pages/PurchaseListPage/chunk';\nimport { PurchasePaymentPage } from './pages/PurchasePaymentPage/chunk';\nimport { PurchaseReturnPage } from './pages/PurchaseReturnPage/chunk';\nimport { SalesPage } from './pages/SalesPage/chunk';\nimport { SalesDetailResultPage } from './pages/SalesPage/SalesDetailResultPage';\nimport { SettingPage } from './pages/SettingPage/chunk';\nimport { SoldMedicineReportPage } from './pages/SoldMedicineReportPage/chunk';\nimport { StockCardPage } from './pages/StockCardPage/chunk';\nimport { StockOpnamePage } from './pages/StockOpnamePage/chunk';\nimport { SummarySalesReportPage } from './pages/SummarySalesReportPage/chunk';\nimport { SummarySalesReportResultPage } from './pages/SummarySalesReportPage/SummarySalesReportResultPage';\n\nexport const Routes: React.FC<{ isAuth: boolean }> = ({ isAuth }) => (\n    <Router authPath='/login' isAuth={isAuth}>\n        <Route authenticate component={HomePage} exact={true} path='/' />\n\n        <Route authenticate component={SettingPage} exact={true} path='/settings' />\n\n        <Route authenticate component={MasterMedicinePage} exact={true} path='/medicine' />\n        <Route authenticate component={MasterUoMPage} exact={true} path='/uom' />\n        <Route authenticate component={MasterCategoryPage} exact={true} path='/category' />\n        <Route authenticate component={MasterVariantPage} exact={true} path='/variant' />\n        <Route authenticate component={MasterSupplierPage} exact={true} path='/supplier' />\n\n        <Route authenticate component={StockCardPage} exact={true} path='/stock_card' />\n        <Route authenticate component={StockOpnamePage} exact={true} path='/stock_opname' />\n\n        <Route authenticate component={PurchaseListPage} exact={true} path='/purchase_list' />\n        <Route\n            authenticate\n            component={BuyPriceHistoryPage}\n            exact={true}\n            path='/buy_price_history'\n        />\n        <Route authenticate component={PurchasePaymentPage} exact={true} path='/purchase_payment' />\n        <Route authenticate component={PurchaseReturnPage} exact={true} path='/purchase_return' />\n\n        <Route authenticate component={SalesPage} exact={true} path='/sales' />\n        <Route authenticate component={SalesDetailResultPage} exact={true} path='/sales_report' />\n\n        <Route authenticate component={MedicineListReportPage} exact={true} path='/medicine_list' />\n        <Route\n            authenticate\n            component={MedicineAlmostDepletedReportPage}\n            exact={true}\n            path='/medicine_almost_depleted'\n        />\n        <Route\n            authenticate\n            component={MedicineAlmostExpiredReportPage}\n            exact={true}\n            path='/medicine_almost_expired'\n        />\n        <Route authenticate component={SoldMedicineReportPage} exact={true} path='/sold_medicine' />\n        <Route authenticate component={SummarySalesReportPage} exact={true} path='/summary_sales' />\n        <Route\n            authenticate\n            component={SummarySalesReportResultPage}\n            exact={true}\n            path='/summary_sales_report'\n        />\n\n        <Route component={LoginPage} exact={true} path='/login' />\n    </Router>\n);\n","import React from 'react';\n\ninterface ErrorBoundaryProps {\n    onError: (error: Error) => void;\n    renderOnError: React.FC;\n}\nexport class ErrorBoundary extends React.Component<ErrorBoundaryProps, { hasError: boolean }> {\n    constructor(props: ErrorBoundaryProps) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    static getDerivedStateFromError(_: Error) {\n        return { hasError: true };\n    }\n\n    componentDidCatch(error: Error) {\n        this.props.onError(error);\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return <this.props.renderOnError />;\n        }\n        return this.props.children;\n    }\n}\n","import { enquireScreen, unenquireScreen } from 'enquire-js';\nimport React from 'react';\n\nimport UIContext from 'src/shared/contexts/UIContext';\n\ninterface MainLayoutState {\n    isMobile: boolean;\n}\n\nexport class MainLayout extends React.Component<{}, MainLayoutState> {\n    constructor(props: {}) {\n        super(props);\n        this.state = { isMobile: false };\n        this.enquireHandler = this.enquireHandler.bind(this);\n    }\n\n    componentDidMount() {\n        this.enquireHandler();\n    }\n\n    componentWillUnmount() {\n        unenquireScreen(this.enquireHandler);\n    }\n\n    enquireHandler() {\n        enquireScreen((mobile: any) => {\n            this.setState({ isMobile: mobile });\n        });\n    }\n\n    render() {\n        let { children } = this.props;\n        let UI = { isMobile: !!this.state.isMobile! };\n\n        return <UIContext.Provider value={UI}>{children}</UIContext.Provider>;\n    }\n}\n","import React from 'react';\nimport { ConfigProvider } from 'antd';\nimport enGB from 'antd/lib/locale-provider/en_GB';\n\nimport { createClient, GraphqlProvider } from 'src/core/graphql';\nimport {\n    createAuthModule,\n    createAuthTokenStorage,\n    useIsAuthenticated,\n} from 'src/core/graphql/auth';\nimport { createCrudModule } from 'src/core/graphql/crud';\nimport { createLogger } from 'src/core/log';\n\nimport { queryForm } from 'src/shared/graphql';\nimport { getSettings } from 'src/shared/graphql/Setting/schema.gql';\n\nimport { createConfig } from './config';\nimport { Routes } from './Routes';\nimport { ErrorBoundary } from './shell/ErrorBoundary';\nimport { MainLayout } from './shell/MainLayout';\n\nconst config = createConfig();\nconst authTokenStorage = createAuthTokenStorage();\nexport const graphqlClient = createClient({\n    serverUri: config.graphqlServerUri,\n    modules: [createAuthModule({ storage: authTokenStorage }), createCrudModule()],\n});\nconst logger = createLogger({ environment: config.environment, dsn: config.loggerDsn });\nconst MainErrorOverlay = () => <h1>Something went wrong.</h1>;\n\nexport const App = () => {\n    return (\n        <ErrorBoundary onError={logger.error} renderOnError={MainErrorOverlay}>\n            <GraphqlProvider client={graphqlClient}>\n                <ConfigProvider locale={enGB}>\n                    <MainLayout>\n                        <AppRoutes />\n                    </MainLayout>\n                </ConfigProvider>\n            </GraphqlProvider>\n        </ErrorBoundary>\n    );\n};\n\nconst AppRoutes = () => {\n    const isAuthenticated = useIsAuthenticated();\n    let query = queryForm({ query: getSettings, variables: { category: 'general' } });\n\n    if (query.loading) return null;\n\n    let setting = query.data?.getSettingsByCategory.find(\n        (setting: any) => setting.type === 'language'\n    );\n    localStorage.setItem('language', setting.value);\n\n    return <Routes isAuth={isAuthenticated} />;\n};\n","export const createConfig = () => ({\n    environment: process.env.NODE_ENV,\n    graphqlServerUri:\n        (process.env.NODE_ENV === 'development'\n            ? 'http://localhost:4000/graphql'\n            : process.env.REACT_APP_GRAPHQL_SERVER_URI) || '',\n    loggerDsn: process.env.REACT_APP_LOGGER_DSN || '',\n});\n","export * from './App';\n","import nprogress from 'nprogress';\nimport 'nprogress/nprogress.css';\n\nexport function Progress(start: boolean) {\n    nprogress.configure({ showSpinner: false });\n\n    if (start) {\n        return nprogress.start();\n    } else {\n        return nprogress.done();\n    }\n}\n"],"sourceRoot":""}