{"version":3,"sources":["shared/graphql/Medicine/schema.gql.ts","shared/components/Excel/Excel.tsx","app/pages/MedicineAlmostDepletedReportPage/constants.ts","app/pages/MedicineAlmostDepletedReportPage/MedicineAlmostDepletedReportPage.tsx","app/pages/MedicineAlmostDepletedReportPage/index.ts"],"names":["MEDICINE_BY_QUERY","gql","MEDICINE_LIST","MEDICINE_LIST_ACTIVE","MEDICINES","MEDICINE_ALMOST_DEPLETED","MEDICINE_ALMOST_EXPIRED","CREATE_MEDICINE","DELETE_MEDICINE","UPDATE_MANY_MEDICINE","UPDATE_MEDICINE","getMedicineAlmostDepleted","options","useQuery","getMedicineAlmostExpired","getMedicines","getMedicineByQuery","getMedicineList","getMedicineListActive","createMedicine","useMutation","deleteMedicine","updateManyMedicine","updateMedicine","Excel","React","column","data","fileName","sheetName","filename","element","className","type","Icon","Sheet","name","map","Column","key","label","value","medicineExcelColumns","en","id","medicineExcelFileName","medicineExcelSheet","medicineTitle","MedicineAlmostDepletedReportPage","lang","getLanguage","queryMedicine","queryForm","query","loading","Spin","medicine","length","code","stock","min_stock","sell_price","handleData","Page","ReportCard","title","url"],"mappings":"g0IAGO,IAAMA,EAAoBC,YAAH,KA4BjBC,EAAgBD,YAAH,KA+BbE,EAAuBF,YAAH,KA+BpBG,EAAYH,YAAH,KAcTI,EAA2BJ,YAAH,KAYxBK,EAA0BL,YAAH,KAgB9BM,EAAkBN,YAAH,KAQfO,EAAkBP,YAAH,KAQfQ,EAAuBR,YAAH,KAQpBS,EAAkBT,YAAH,KAQRU,EAA4B,SAACC,GAAD,OACrCC,YAAoDR,EAA0BO,IACrEE,EAA2B,SAACF,GAAD,OACpCC,YACIP,EACAM,IAEKG,EAAe,SAACH,GAAD,OACxBC,YAAuCT,EAAWQ,IACzCI,EAAqB,SAACJ,GAAD,OAC9BC,YAA2Cb,EAAmBY,IACrDK,EAAkB,SAACL,GAAD,OAC3BC,YAA0CX,EAAeU,IAChDM,EAAwB,SAACN,GAAD,OACjCC,YAAgDV,EAAsBS,IAC7DO,EAAiB,SAACP,GAAD,OAC1BQ,YAA0Cb,EAAiBK,IAClDS,EAAiB,SAACT,GAAD,OAC1BQ,YAA0CZ,EAAiBI,IAClDU,EAAqB,SAACV,GAAD,OAC9BQ,YAA8CX,EAAsBG,IAC3DW,EAAiB,SAACX,GAAD,OAC1BQ,YAA0CV,EAAiBE,K,iCC7L/D,iFAgBaY,EAAQC,QAAuB,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,KAAMC,EAAjB,EAAiBA,SAAUC,EAA3B,EAA2BA,UAA3B,OACxC,gBAAC,IAAD,CACIC,SAAUF,EACVG,QACI,gBAAC,IAAD,CAAQC,UAAU,yBAAyBC,KAAK,WAC3CC,IAAI,MADT,WAKJ,gBAAC,IAASC,MAAV,CAAgBR,KAAMA,EAAMS,KAAMP,GAC7BH,EAAOW,KAAI,SAACX,GAAD,OACR,gBAAC,IAASY,OAAV,CAAiBC,IAAKb,EAAOc,MAAOA,MAAOd,EAAOc,MAAOC,MAAOf,EAAOe,iB,iCC3BvF,wIAAO,IAAMC,EAAuB,CAChCC,GAAI,CACA,CAAEH,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,QAASC,MAAO,SACzB,CAAED,MAAO,YAAaC,MAAO,aAC7B,CAAED,MAAO,aAAcC,MAAO,eAElCG,GAAI,CACA,CAAEJ,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,OAAQC,MAAO,SACxB,CAAED,MAAO,eAAgBC,MAAO,aAChC,CAAED,MAAO,aAAcC,MAAO,gBAIzBI,EAAwB,CACjCF,GAAI,gCACJC,GAAI,0BAEKE,EAAqB,CAAEH,GAAI,2BAA4BC,GAAI,qBAC3DG,EAAgB,CAAEJ,GAAI,kBAAmBC,GAAI,iB,+LCF7CI,EAAmC,WAC5C,IAAIC,EAAOC,cACPC,EAAgBC,YAAU,CAAEC,MAAO1C,MACvC,GAAIwC,EAAcG,QAAS,OAAO,kBAACC,EAAA,EAAD,MAElC,IAAIC,EAEJ,SAAoB7B,GAChB,IAAI6B,EAAQ,OAAG7B,QAAH,IAAGA,OAAH,EAAGA,EAAMhB,0BACrB,IAAK6C,IAAaA,EAASC,OACvB,MAAO,GAGX,OAAOD,EAASnB,KAAI,SAACmB,GACjB,MAAO,CACHE,KAAMF,EAASE,KACftB,KAAMoB,EAASpB,KACfuB,MAAOH,EAASG,MAChBC,UAAWJ,EAASI,UACpBC,WAAYL,EAASK,eAdlBC,CAAWX,EAAcxB,MAmBxC,OACI,kBAACoC,EAAA,EAAD,KACI,yBAAK/B,UAAU,qCACX,kBAACgC,EAAA,EAAD,CAAYC,MAAM,2BAA2BC,IAAI,6BAC7C,yBAAKlC,UAAU,2BACX,yBAAKA,UAAU,gBAAgBe,IAAcE,GAA7C,MACA,kBAACzB,EAAA,EAAD,CACIE,OAAQgB,IAAqBO,GAC7BtB,KAAM6B,EACN5B,SAAUiB,IAAsBI,GAChCpB,UAAWiB,IAAmBG,UCtD1D","file":"static/js/MedicineAlmostDepletedReportPage.381992d9.chunk.js","sourcesContent":["import { Medicine, MedicineAlmostExpired } from 'src/core/api';\nimport { gql, useMutation, useQuery } from 'src/core/graphql';\n\nexport const MEDICINE_BY_QUERY = gql`\n    query getMedicineByQuery($payload: QueryPayload) {\n        getMedicineByQuery(payload: $payload) {\n            barcode\n            buy_price\n            category {\n                id\n                name\n            }\n            code\n            id\n            min_stock\n            name\n            sell_price\n            status\n            stock\n            uom {\n                id\n                name\n            }\n            variant {\n                id\n                name\n            }\n        }\n    }\n`;\n\nexport const MEDICINE_LIST = gql`\n    query getMedicineList($payload: ListPayload) {\n        getMedicineList(payload: $payload) {\n            data {\n                barcode\n                buy_price\n                category {\n                    id\n                    name\n                }\n                code\n                id\n                min_stock\n                name\n                sell_price\n                status\n                stock\n                uom {\n                    id\n                    name\n                }\n                variant {\n                    id\n                    name\n                }\n            }\n            total\n        }\n    }\n`;\n\nexport const MEDICINE_LIST_ACTIVE = gql`\n    query getMedicineListActive($payload: ListPayload) {\n        getMedicineListActive(payload: $payload) {\n            data {\n                barcode\n                buy_price\n                category {\n                    id\n                    name\n                }\n                code\n                id\n                min_stock\n                name\n                sell_price\n                status\n                stock\n                uom {\n                    id\n                    name\n                }\n                variant {\n                    id\n                    name\n                }\n            }\n            total\n        }\n    }\n`;\n\nexport const MEDICINES = gql`\n    query getMedicines {\n        getMedicines {\n            code\n            name\n            stock\n            uom {\n                name\n            }\n            sell_price\n        }\n    }\n`;\n\nexport const MEDICINE_ALMOST_DEPLETED = gql`\n    query getMedicineAlmostDepleted {\n        getMedicineAlmostDepleted {\n            code\n            name\n            stock\n            min_stock\n            sell_price\n        }\n    }\n`;\n\nexport const MEDICINE_ALMOST_EXPIRED = gql`\n    query getMedicineAlmostExpired {\n        getMedicineAlmostExpired {\n            batch_no\n            expired_date\n            medicine {\n                code\n                name\n            }\n            supplier {\n                name\n            }\n        }\n    }\n`;\n\nconst CREATE_MEDICINE = gql`\n    mutation createMedicine($payload: CreateMedicinePayload) {\n        createMedicine(payload: $payload) {\n            name\n        }\n    }\n`;\n\nconst DELETE_MEDICINE = gql`\n    mutation deleteMedicine($payload: DeletePayload) {\n        deleteMedicine(payload: $payload) {\n            name\n        }\n    }\n`;\n\nconst UPDATE_MANY_MEDICINE = gql`\n    mutation updateManyMedicine($payload: UpdateManyPayload) {\n        updateManyMedicine(payload: $payload) {\n            status\n        }\n    }\n`;\n\nconst UPDATE_MEDICINE = gql`\n    mutation updateMedicine($payload: UpdateMedicinePayload) {\n        updateMedicine(payload: $payload) {\n            name\n        }\n    }\n`;\n\nexport const getMedicineAlmostDepleted = (options: any) =>\n    useQuery<{ getMedicineAlmostDepleted: Medicine[] }>(MEDICINE_ALMOST_DEPLETED, options);\nexport const getMedicineAlmostExpired = (options: any) =>\n    useQuery<{ getMedicineAlmostExpired: MedicineAlmostExpired[] }>(\n        MEDICINE_ALMOST_EXPIRED,\n        options\n    );\nexport const getMedicines = (options: any) =>\n    useQuery<{ getMedicines: Medicine[] }>(MEDICINES, options);\nexport const getMedicineByQuery = (options: any) =>\n    useQuery<{ getMedicineByQuery: Medicine }>(MEDICINE_BY_QUERY, options);\nexport const getMedicineList = (options: any) =>\n    useQuery<{ getMedicineList: Medicine[] }>(MEDICINE_LIST, options);\nexport const getMedicineListActive = (options: any) =>\n    useQuery<{ getMedicineListActive: Medicine[] }>(MEDICINE_LIST_ACTIVE, options);\nexport const createMedicine = (options: any) =>\n    useMutation<{ createMedicine: Medicine }>(CREATE_MEDICINE, options);\nexport const deleteMedicine = (options: any) =>\n    useMutation<{ deleteMedicine: Medicine }>(DELETE_MEDICINE, options);\nexport const updateManyMedicine = (options: any) =>\n    useMutation<{ updateManyMedicine: Medicine }>(UPDATE_MANY_MEDICINE, options);\nexport const updateMedicine = (options: any) =>\n    useMutation<{ updateMedicine: Medicine }>(UPDATE_MEDICINE, options);\n","import * as React from 'react';\nimport Workbook from 'react-excel-workbook';\n\nimport { Button } from 'src/shared/components/Button';\nimport { Icon } from 'src/shared/components/Icon';\n\ninterface ExcelProps {\n    column: {\n        label: string;\n        value: string;\n    }[];\n    data: any;\n    fileName: string;\n    sheetName: string;\n}\n\nexport const Excel = React.memo<ExcelProps>(({ column, data, fileName, sheetName }) => (\n    <Workbook\n        filename={fileName}\n        element={\n            <Button className='bg-green fg-white mr-2' type='default'>\n                {Icon['excel']} Excel\n            </Button>\n        }\n    >\n        <Workbook.Sheet data={data} name={sheetName}>\n            {column.map((column: { label: string; value: string }) => (\n                <Workbook.Column key={column.label} label={column.label} value={column.value} />\n            ))}\n        </Workbook.Sheet>\n    </Workbook>\n));\n","export const medicineExcelColumns = {\n    en: [\n        { label: 'Code', value: 'code' },\n        { label: 'Name', value: 'name' },\n        { label: 'Stock', value: 'stock' },\n        { label: 'Min Stock', value: 'min_stock' },\n        { label: 'Sell Price', value: 'sell_price' },\n    ],\n    id: [\n        { label: 'Kode', value: 'code' },\n        { label: 'Nama', value: 'name' },\n        { label: 'Stok', value: 'stock' },\n        { label: 'Minimal Stok', value: 'min_stock' },\n        { label: 'Harga Jual', value: 'sell_price' },\n    ],\n};\n\nexport const medicineExcelFileName = {\n    en: 'Medicine Almost Depleted.xlsx',\n    id: 'Obat Hampir Habis.xlsx',\n};\nexport const medicineExcelSheet = { en: 'Medicine Almost Depleted', id: 'Obat Hampir Habis' };\nexport const medicineTitle = { en: 'Generate Report', id: 'Buat Laporan' };\n","import React from 'react';\n\nimport { Page } from 'src/app/shell/Page';\n\nimport { Medicine } from 'src/core/api';\n\nimport { Excel } from 'src/shared/components/Excel/Excel';\nimport { ReportCard } from 'src/shared/components/ReportCard';\nimport { Spin } from 'src/shared/components/Spin';\nimport { queryForm } from 'src/shared/graphql';\nimport { getMedicineAlmostDepleted } from 'src/shared/graphql/Medicine/schema.gql';\n\nimport { getLanguage } from '../SettingPage/helpers';\nimport {\n    medicineExcelColumns,\n    medicineExcelFileName,\n    medicineExcelSheet,\n    medicineTitle,\n} from './constants';\n\nexport const MedicineAlmostDepletedReportPage = () => {\n    let lang = getLanguage();\n    let queryMedicine = queryForm({ query: getMedicineAlmostDepleted });\n    if (queryMedicine.loading) return <Spin />;\n\n    let medicine = handleData(queryMedicine.data);\n\n    function handleData(data?: any) {\n        let medicine = data?.getMedicineAlmostDepleted;\n        if (!medicine || !medicine.length) {\n            return [];\n        }\n\n        return medicine.map((medicine: Medicine) => {\n            return {\n                code: medicine.code,\n                name: medicine.name,\n                stock: medicine.stock,\n                min_stock: medicine.min_stock,\n                sell_price: medicine.sell_price,\n            };\n        });\n    }\n\n    return (\n        <Page>\n            <div className='d-flex fd-row fj-around mx-8 my-8'>\n                <ReportCard title='Medicine Almost Depleted' url='/medicine_almost_depleted'>\n                    <div className='d-flex fa-center fd-row'>\n                        <div className='tw-bold mr-4'>{medicineTitle[lang]} :</div>\n                        <Excel\n                            column={medicineExcelColumns[lang]}\n                            data={medicine}\n                            fileName={medicineExcelFileName[lang]}\n                            sheetName={medicineExcelSheet[lang]}\n                        />\n                    </div>\n                </ReportCard>\n            </div>\n        </Page>\n    );\n};\n","export { MedicineAlmostDepletedReportPage as default } from './MedicineAlmostDepletedReportPage';\n"],"sourceRoot":""}