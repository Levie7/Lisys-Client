{"version":3,"sources":["shared/utilities/classNames.ts","shared/components/Button/Button.tsx","shared/components/Dropdown/Dropdown.tsx","shared/components/Menu/Menu.tsx","shared/components/Button/constants.ts","shared/components/Button/ButtonAction.tsx","shared/components/Button/index.ts","shared/graphql/User/schema.gql.ts","shared/components/Divider/Divider.tsx","shared/components/Divider/index.ts","shared/components/RatioBox/constants.ts","shared/components/RatioBox/RatioBox.tsx","shared/components/Picture/Picture.tsx","shared/components/Picture/index.ts","shared/graphql/Permission/schema.gql.ts","app/shell/components/Header/constants.ts","app/shell/components/Header/Header.tsx","app/shell/components/Footer/Footer.tsx","app/shell/components/MainMenu/constants.ts","app/shell/components/MainMenu/Menu.tsx","app/shell/components/MainMenu/MenuLeft.tsx","app/shell/components/MainMenu/MenuTop.tsx","app/shell/components/MainMenu/MainMenu.tsx","app/shell/Page.tsx","shared/components/Card/Card.tsx","shared/components/Card/index.ts","shared/components/Link/Link.tsx","shared/components/Link/index.ts","shared/helpers/convertArrayOfObjects.ts","app/shell/components/MainMenu/assets/logo-dark.png","shared/graphql/Menu/schema.gql.ts","app/shell/components/MainMenu/assets/logo-light.png","shared/components/Breadcrumb/Breadcrumb.tsx","shared/components/Breadcrumb/index.ts","shared/components/Master/components/MasterContentHeader.tsx","shared/components/ReportCard/ReportCard.tsx","shared/components/ReportCard/index.ts"],"names":["classNames","classes","names","forEach","name","classParts","Array","isArray","Object","keys","filter","key","push","x","concat","split","groups","cls","group","map","join","Button","React","ref","children","className","htmlType","id","loading","onClick","type","props","Dropdown","overlay","Menu","this","Item","AntMenu","buttonAction","activate","en","inactivate","ButtonAction","buttonType","crud","iconType","lang","title","updateCrud","fetch","handleClick","variables","payload","handleMenuClick","e","action","menu","Icon","renderActions","AUTH_LOGIN","gql","USER_BY_ID","USER_BY_USERNAME","USER_LIST","CREATE_USER","DELETE_USER","UPDATE_USER","authLogin","options","useQuery","getUserById","getUserByUsername","getUserList","createUser","useMutation","deleteUser","updateUser","Divider","orientation","RATIO_CLASSES","require","RatioBox","ratio","Picture","alt","imgClassName","objectFit","src","stretch","pictureVariant","Picture_Contained","Picture_Wide","pictureObjectFitStyle","Picture_Contain","Picture_Cover","GET_ACCESS_PERMISSIONS","GET_CREATE_PERMISSIONS","GET_DELETE_PERMISSIONS","GET_READ_PERMISSIONS","GET_UPDATE_PERMISSIONS","ACTIONS","PERMISSIONS","UPDATE_PERMISSION","getActions","getAccessPermissionByRoleId","getCreatePermissionByRoleId","getDeletePermissionByRoleId","getReadPermissionByRoleId","getUpdatePermissionByRoleId","getPermissionsByRoleId","updatePermission","headerAction","logout","headerField","role","Header","auth","queryUser","queryForm","query","username","user","data","selectable","trigger","placement","href","shape","size","icon","Footer","getSettings","category","Spin","company","convertArrayOfObjectsToObject","getSettingsByCategory","year","aria-label","logo","dark","url","light","mode","theme","queryMenu","getMenus","queryPermission","skip","role_id","accessPermission","generateMenu","menuItems","find","permission","status","length","subMenuTitle","SubMenu","renderSubMenu","Link","to","renderMenuItem","MenuLeft","state","onCollapsed","toggleCollapse","bind","setState","isMobile","paramsMobile","collapsed","collapsible","onCollapse","width","paramsDesktop","breakpoint","params","Sider","height","autoHide","style","MenuTop","MainMenu","isMenuTop","useUIContext","getContainer","level","Page","storage","createAuthTokenStorage","getLanguage","replace","useHistory","getToken","exitSession","Content","Card","bodyStyle","assign","item","value","module","exports","MENUS","Breadcrumb","AntBreadcrumb","MasterContentHeader","Capitalized","ReportCard"],"mappings":"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","file":"static/js/4.c9997b5a.chunk.js","sourcesContent":["interface ClassesObject {\n    [x: string]: boolean;\n}\n\ndeclare type className = string | ClassesObject | string[] | undefined;\n\nexport function classNames(...names: className[]) {\n    let classes: string[] = [];\n    names.forEach((name) => {\n        let classParts: string[] = [];\n        if (Array.isArray(name)) {\n            classParts = name;\n        } else if (typeof name === 'object') {\n            classParts = Object.keys(name).filter((key) => name[key]);\n        } else if (name) {\n            classParts.push(name);\n        }\n\n        classParts.forEach((x) => {\n            classes = classes.concat(x.split(' '));\n        });\n    });\n\n    let groups: any = {};\n    classes.forEach((cls) => {\n        if (!cls) {\n            return;\n        }\n        let [group] = cls.split('-');\n        groups[group] = cls;\n    });\n    return Object.keys(groups)\n        .map((key) => groups[key])\n        .join(' ');\n}\n","import { Button as AntButton } from 'antd';\nimport * as React from 'react';\n\nexport type ButtonType = 'link' | 'default' | 'ghost' | 'primary' | 'dashed' | 'danger';\n\ninterface ButtonProps {\n    children?: React.ReactNode;\n    className?: string;\n    htmlType?: 'button' | 'reset' | 'submit';\n    id?: string;\n    loading?: boolean;\n    type?: ButtonType;\n\n    onClick?: (event: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n}\n\nexport const Button = React.memo<ButtonProps>(\n    React.forwardRef(\n        (\n            { children, className, htmlType, id, loading, onClick, type, ...props },\n            ref?:\n                | string\n                | ((instance: AntButton | null) => void)\n                | React.RefObject<AntButton>\n                | null\n        ) => (\n            <AntButton\n                {...props}\n                className={className}\n                htmlType={htmlType}\n                id={id}\n                loading={loading}\n                onClick={onClick}\n                ref={ref}\n                type={type}\n            >\n                {children}\n            </AntButton>\n        )\n    )\n);\n","import { Dropdown as AntDropdown } from 'antd';\nimport * as React from 'react';\n\ninterface DropdownProps {\n    children: React.ReactElement;\n    overlay: React.ReactElement;\n}\n\nexport const Dropdown = React.memo<DropdownProps>(({ children, overlay }) => (\n    <AntDropdown overlay={overlay}>{children}</AntDropdown>\n));\n","import { Menu as AntMenu } from 'antd';\nimport { ClickParam } from 'antd/lib/menu';\nimport MenuItem from 'antd/lib/menu/MenuItem';\nimport * as React from 'react';\n\ninterface MenuProps {\n    className?: string;\n\n    onClick?: (param: ClickParam) => void;\n}\n\nexport class Menu extends React.PureComponent<MenuProps> {\n    static Item: typeof MenuItem;\n\n    render() {\n        let { children, className, onClick, ...props } = this.props;\n\n        return (\n            <AntMenu {...props} className={className} onClick={onClick}>\n                {children}\n            </AntMenu>\n        );\n    }\n}\nMenu.Item = AntMenu.Item;\n","export const buttonAction = {\n    activate: { en: 'Activate', id: 'Aktifasi' },\n    inactivate: { en: 'Inactivate', id: 'Tidak Aktif' },\n};\n","import * as React from 'react';\n\nimport { Lang } from 'src/core/api';\nimport { updateCrud } from 'src/core/graphql/crud';\n\nimport { Button, ButtonType } from 'src/shared/components/Button';\nimport { CrudConnectedProps } from 'src/shared/components/Crud';\nimport { Dropdown } from 'src/shared/components/Dropdown';\nimport { Icon } from 'src/shared/components/Icon';\nimport { Menu } from 'src/shared/components/Menu';\n\nimport { buttonAction } from './constants';\n\nexport interface ButtonActionProps extends CrudConnectedProps, Lang {\n    buttonType: ButtonType;\n    className?: string;\n    iconType?: string;\n    title: string;\n}\n\nexport const ButtonAction = ({\n    buttonType,\n    className,\n    crud,\n    iconType,\n    lang,\n    title,\n}: ButtonActionProps) => {\n    let [fetch] = updateCrud();\n\n    function handleClick() {\n        fetch({ variables: { payload: crud } });\n    }\n\n    function handleMenuClick(e: any) {\n        fetch({ variables: { payload: { ...crud, action: e.key } } });\n    }\n\n    function renderActions() {\n        let menu = (\n            <Menu onClick={handleMenuClick}>\n                <Menu.Item key='active'>{buttonAction.activate[lang]}</Menu.Item>\n                <Menu.Item key='inactive'>{buttonAction.inactivate[lang]}</Menu.Item>\n            </Menu>\n        );\n\n        return (\n            <Dropdown overlay={menu}>\n                <Button className={className} id='ButtonActions'>\n                    {title} {Icon['action']}\n                </Button>\n            </Dropdown>\n        );\n    }\n\n    function renderDefault() {\n        return (\n            <Button\n                className={className}\n                id='ButtonActionDefault'\n                onClick={handleClick}\n                type={buttonType}\n            >\n                {iconType && Icon[iconType]} {title}\n            </Button>\n        );\n    }\n\n    return crud.action === 'action' ? renderActions() : renderDefault();\n};\n","export * from './Button';\nexport * from './ButtonAction';\n","import { User } from 'src/core/api';\nimport { gql, useMutation, useQuery } from 'src/core/graphql';\n\nconst AUTH_LOGIN = gql`\n    query authLogin($payload: AuthLogin) {\n        authLogin(payload: $payload)\n    }\n`;\n\nexport const USER_BY_ID = gql`\n    query getUserById($id: ID!) {\n        getUserById(id: $id) {\n            id\n            name\n            role {\n                id\n            }\n            username\n        }\n    }\n`;\n\nexport const USER_BY_USERNAME = gql`\n    query getUserByUsername($username: String) {\n        getUserByUsername(username: $username) {\n            id\n            name\n            role {\n                id\n                name\n            }\n            username\n        }\n    }\n`;\n\nexport const USER_LIST = gql`\n    query getUserList($payload: ListPayload) {\n        getUserList(payload: $payload) {\n            data {\n                id\n                name\n                role {\n                    id\n                    name\n                }\n                username\n            }\n            total\n        }\n    }\n`;\n\nconst CREATE_USER = gql`\n    mutation createUser($payload: CreateUserPayload) {\n        createUser(payload: $payload) {\n            name\n            password\n            role {\n                id\n            }\n            username\n        }\n    }\n`;\n\nconst DELETE_USER = gql`\n    mutation deleteUser($payload: DeletePayload) {\n        deleteUser(payload: $payload) {\n            password\n        }\n    }\n`;\n\nconst UPDATE_USER = gql`\n    mutation updateUser($payload: UpdateUserPayload) {\n        updateUser(payload: $payload) {\n            name\n            password\n            role {\n                id\n            }\n            username\n        }\n    }\n`;\n\nexport const authLogin = (options: any) => useQuery<{ authLogin: Boolean }>(AUTH_LOGIN, options);\nexport const getUserById = (options: any) => useQuery<{ getUserById: User }>(USER_BY_ID, options);\nexport const getUserByUsername = (options: any) =>\n    useQuery<{ getUserByUsername: User }>(USER_BY_USERNAME, options);\nexport const getUserList = (options: any) => useQuery<{ getUserList: User[] }>(USER_LIST, options);\nexport const createUser = (options: any) => useMutation<{ createUser: User }>(CREATE_USER, options);\nexport const deleteUser = (options: any) => useMutation<{ deleteUser: User }>(DELETE_USER, options);\nexport const updateUser = (options: any) => useMutation<{ updateUser: User }>(UPDATE_USER, options);\n","import { Divider as AntDivider } from 'antd';\nimport * as React from 'react';\n\ninterface DividerProps {\n    children?: React.ReactNode;\n    orientation?: 'center' | 'left' | 'right';\n}\n\nexport const Divider = React.memo<DividerProps>(({ children, orientation }) => (\n    <AntDivider orientation={orientation}>{children}</AntDivider>\n));\n","export * from './Divider';\n","export const RATIO_CLASSES = {\n    '1:1': 'RatioBox-1-1 w-100',\n    '1:2': 'RatioBox-1-2 w-100',\n    '1:3': 'RatioBox-1-3 w-100',\n    '9:16': 'RatioBox-9-16 w-100',\n};\n","import * as React from 'react';\n\nimport { classNames } from 'src/shared/utilities/classNames';\n\nimport { RATIO_CLASSES } from './constants';\n\nexport type Ratio = keyof typeof RATIO_CLASSES;\n\ninterface RatioBoxProps extends React.HTMLProps<HTMLDivElement> {\n    ratio?: Ratio;\n}\n\nrequire('./RatioBox.sass');\n\nexport const RatioBox = React.memo<RatioBoxProps>(({ ratio, className, ...props }) => {\n    className = classNames('position-relative', ratio && RATIO_CLASSES[ratio], className);\n\n    return <div {...props} className={className} />;\n});\n","import * as React from 'react';\n\nimport { Ratio, RatioBox } from 'src/shared/components/RatioBox';\nimport { classNames } from 'src/shared/utilities/classNames';\n\ninterface PictureProps\n    extends React.DetailedHTMLProps<React.ImgHTMLAttributes<HTMLImageElement>, HTMLImageElement> {\n    alt: string;\n    imgClassName?: string;\n    objectFit?: '' | 'contain' | 'scale-down' | 'cover';\n    ratio?: Ratio;\n    stretch?: 'none' | 'width' | 'container';\n}\n\nrequire('./Picture.sass');\n\nexport const Picture = React.memo<PictureProps>(\n    ({\n        alt,\n        className,\n        imgClassName,\n        objectFit,\n        ratio,\n        src,\n        stretch = 'none',\n        title,\n        ...props\n    }) => {\n        let pictureVariant = {\n            Picture_Contained: stretch === 'container',\n            Picture_Wide: stretch === 'width',\n        };\n\n        let pictureObjectFitStyle = {\n            Picture_Contain: objectFit === 'contain',\n            Picture_Cover: objectFit === 'cover',\n            'Picture_Scale-Down': objectFit === 'scale-down',\n        };\n\n        return (\n            <RatioBox\n                className={classNames('Picture', pictureObjectFitStyle, pictureVariant, className)}\n                ratio={ratio}\n            >\n                <img alt={alt} className={imgClassName} src={src} title={title || alt} {...props} />\n            </RatioBox>\n        );\n    }\n);\n","export * from './Picture';\n","import { Permission } from 'src/core/api';\nimport { gql, useMutation, useQuery } from 'src/core/graphql';\n\nexport const GET_ACCESS_PERMISSIONS = gql`\n    query getAccessPermissionByRoleId($role_id: String!) {\n        getAccessPermissionByRoleId(role_id: $role_id) {\n            action {\n                name\n            }\n            id\n            menu {\n                name\n            }\n            status\n        }\n    }\n`;\n\nexport const GET_CREATE_PERMISSIONS = gql`\n    query getCreatePermissionByRoleId($role_id: String!) {\n        getCreatePermissionByRoleId(role_id: $role_id) {\n            action {\n                name\n            }\n            id\n            menu {\n                name\n            }\n            status\n        }\n    }\n`;\n\nexport const GET_DELETE_PERMISSIONS = gql`\n    query getDeletePermissionByRoleId($role_id: String!) {\n        getDeletePermissionByRoleId(role_id: $role_id) {\n            action {\n                name\n            }\n            id\n            menu {\n                name\n            }\n            status\n        }\n    }\n`;\n\nexport const GET_READ_PERMISSIONS = gql`\n    query getReadPermissionByRoleId($role_id: String!) {\n        getReadPermissionByRoleId(role_id: $role_id) {\n            action {\n                name\n            }\n            id\n            menu {\n                name\n            }\n            status\n        }\n    }\n`;\n\nexport const GET_UPDATE_PERMISSIONS = gql`\n    query getUpdatePermissionByRoleId($role_id: String!) {\n        getUpdatePermissionByRoleId(role_id: $role_id) {\n            action {\n                name\n            }\n            id\n            menu {\n                name\n            }\n            status\n        }\n    }\n`;\n\nexport const ACTIONS = gql`\n    query {\n        getActions {\n            id\n            name\n        }\n    }\n`;\n\nexport const PERMISSIONS = gql`\n    query getPermissionsByRoleId($role_id: String!) {\n        getPermissionsByRoleId(role_id: $role_id) {\n            action {\n                name\n            }\n            id\n            menu {\n                name\n            }\n            status\n        }\n    }\n`;\n\nconst UPDATE_PERMISSION = gql`\n    mutation updatePermission($payload: UpdatePermissionPayload) {\n        updatePermission(payload: $payload) {\n            status\n        }\n    }\n`;\n\nexport const getActions = (options: any) =>\n    useQuery<{ getActions: { id: string; name: string } }>(ACTIONS, options);\nexport const getAccessPermissionByRoleId = (options: any) =>\n    useQuery<{ getAccessPermissionByRoleId: Permission }>(GET_ACCESS_PERMISSIONS, options);\nexport const getCreatePermissionByRoleId = (options: any) =>\n    useQuery<{ getCreatePermissionByRoleId: Permission }>(GET_CREATE_PERMISSIONS, options);\nexport const getDeletePermissionByRoleId = (options: any) =>\n    useQuery<{ getDeletePermissionByRoleId: Permission }>(GET_DELETE_PERMISSIONS, options);\nexport const getReadPermissionByRoleId = (options: any) =>\n    useQuery<{ getReadPermissionByRoleId: Permission }>(GET_READ_PERMISSIONS, options);\nexport const getUpdatePermissionByRoleId = (options: any) =>\n    useQuery<{ getUpdatePermissionByRoleId: Permission }>(GET_UPDATE_PERMISSIONS, options);\nexport const getPermissionsByRoleId = (options: any) =>\n    useQuery<{ getPermissionsByRoleId: Permission }>(PERMISSIONS, options);\nexport const updatePermission = (options: any) =>\n    useMutation<{ updatePermission: Permission }>(UPDATE_PERMISSION, options);\n","export const headerAction = {\n    logout: { en: 'Logout', id: 'Keluar' },\n};\nexport const headerField = {\n    role: { en: 'Role', id: 'Peran' },\n};\n","import { Avatar, Dropdown, Menu } from 'antd';\nimport * as React from 'react';\n\nimport { Lang } from 'src/core/api';\n\nimport { Icon } from 'src/shared/components/Icon';\nimport { queryForm } from 'src/shared/graphql';\nimport { getUserByUsername } from 'src/shared/graphql/User/schema.gql';\nimport { headerAction, headerField } from './constants';\n\nrequire('./Header.sass');\n\ninterface HeaderProps extends Lang {\n    auth: string | null;\n    logout: () => void;\n}\n\nexport const Header = React.memo<HeaderProps>(({ auth, lang, logout }) => {\n    let queryUser = queryForm({\n        query: getUserByUsername,\n        variables: { username: auth },\n    });\n    if (queryUser.loading) {\n        return null;\n    }\n\n    let user = queryUser.data?.getUserByUsername;\n\n    let menu = (\n        <Menu selectable={false}>\n            <Menu.Item>\n                <div className='rfq__widget__system-status__item'>\n                    <strong>Hello, {user.name}</strong>\n                    <div>\n                        <strong>{headerField.role[lang]} :</strong> {user.role.name}\n                    </div>\n                </div>\n            </Menu.Item>\n            <Menu.Item>\n                <div onClick={handleLogout}>\n                    <i className='topbar__dropdownMenuIcon icmn-exit' /> {headerAction.logout[lang]}\n                </div>\n            </Menu.Item>\n        </Menu>\n    );\n\n    function handleLogout() {\n        logout();\n    }\n\n    return (\n        <div className='Header d-flex fj-between px-4'>\n            <div />\n            <div className='Header_Dropdown'>\n                <Dropdown overlay={menu} trigger={['click']} placement='bottomRight'>\n                    <a className='ant-dropdown-link' href='/'>\n                        <Avatar\n                            className='Header_Avatar'\n                            shape='square'\n                            size='large'\n                            icon={Icon.user}\n                        />\n                    </a>\n                </Dropdown>\n            </div>\n        </div>\n    );\n});\n","import * as React from 'react';\n\nimport { SettingCompany } from 'src/core/api';\n\nimport { Spin } from 'src/shared/components/Spin';\nimport { getSettings } from 'src/shared/graphql/Setting/schema.gql';\nimport { queryForm } from 'src/shared/graphql';\nimport { convertArrayOfObjectsToObject } from 'src/shared/helpers/convertArrayOfObjects';\n\nfunction FooterPure() {\n    let query = queryForm({ query: getSettings, variables: { category: 'company' } });\n    if (query.loading) return <Spin />;\n\n    let company = convertArrayOfObjectsToObject(\n        query.data?.getSettingsByCategory\n    ) as SettingCompany;\n\n    return (\n        <div className='bg-primary fg-white p-6 ta-center' id='Footer'>\n            Copyright © {company.year} - {company.name}. All Right Reserved.\n            <br />\n            made with{' '}\n            <span role='img' aria-label='Heart'>\n                ❤️\n            </span>{' '}\n            by Lisys\n        </div>\n    );\n}\n\nexport const Footer = React.memo(FooterPure);\n","export const logo = {\n    dark: {\n        alt: 'Lisys-Dark',\n        title: 'Lisys Dark',\n        url: require('./assets/logo-dark.png'),\n    },\n    light: {\n        alt: 'Lisys-Light',\n        title: 'Lisys Light',\n        url: require('./assets/logo-light.png'),\n    },\n};\n","import { Menu as AntMenu } from 'antd';\nimport * as React from 'react';\n\nimport { Menu as MenuAPI, Permission } from 'src/core/api';\n\nimport { Icon } from 'src/shared/components/Icon';\nimport { Link } from 'src/shared/components/Link';\nimport { queryForm } from 'src/shared/graphql';\nimport { getMenus } from 'src/shared/graphql/Menu/schema.gql';\nimport { getAccessPermissionByRoleId } from 'src/shared/graphql/Permission/schema.gql';\nimport { getUserByUsername } from 'src/shared/graphql/User/schema.gql';\n\ninterface MenuProps {\n    auth: string | null;\n    className?: string;\n    mode?: 'vertical' | 'vertical-left' | 'vertical-right' | 'horizontal' | 'inline';\n    theme?: 'light' | 'dark';\n}\n\nfunction MenuPure({ auth, className, mode, theme }: MenuProps) {\n    let queryMenu = queryForm({ query: getMenus });\n    let queryUser = queryForm({\n        query: getUserByUsername,\n        variables: { username: auth },\n    });\n    let queryPermission = queryForm({\n        skip: !queryUser.data,\n        query: getAccessPermissionByRoleId,\n        variables: { role_id: queryUser.data?.getUserByUsername.role.id },\n    });\n\n    if (queryMenu.loading || queryUser.loading || queryPermission.loading) {\n        return null;\n    }\n\n    let accessPermission = queryPermission.data?.getAccessPermissionByRoleId;\n\n    function generateMenu(menuItems: any) {\n        return menuItems\n            .filter((menu: MenuAPI) =>\n                accessPermission.find(\n                    (permission: Permission) =>\n                        permission.menu?.name === menu.name && permission.status === 'active'\n                )\n            )\n            .map((menu: MenuAPI) =>\n                menu.children?.length ? renderSubMenu(menu) : renderMenuItem(menu)\n            );\n    }\n\n    function renderMenuItem(menu: MenuAPI) {\n        return (\n            <AntMenu.Item key={menu.key}>\n                <Link to={menu.url}>\n                    {Icon[menu.icon]}\n                    <span>{menu.name}</span>\n                </Link>\n            </AntMenu.Item>\n        );\n    }\n\n    function renderSubMenu(menu: MenuAPI) {\n        let subMenuTitle = (\n            <>\n                {Icon[menu.icon]}\n                <span>{menu.name}</span>\n            </>\n        );\n\n        return (\n            <AntMenu.SubMenu key={menu.key} title={subMenuTitle}>\n                {generateMenu(menu.children)}\n            </AntMenu.SubMenu>\n        );\n    }\n\n    return (\n        <AntMenu className={className} mode={mode} theme={theme}>\n            {generateMenu(queryMenu.data.getMenus)}\n        </AntMenu>\n    );\n}\n\nexport const Menu = React.memo(MenuPure);\n","import { Layout } from 'antd';\nimport * as React from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars';\n\nimport { Picture } from 'src/shared/components/Picture';\n\nimport { logo } from './constants';\nimport { Menu } from './Menu';\n\ninterface MenuLeftProps {\n    auth: string | null;\n    isMobile: boolean;\n}\ninterface MenuLeftState {\n    onCollapsed: boolean;\n}\n\nrequire('./MenuLeft.sass');\n\nexport class MenuLeft extends React.PureComponent<MenuLeftProps, MenuLeftState> {\n    constructor(props: MenuLeftProps) {\n        super(props);\n\n        this.state = { onCollapsed: false };\n        this.toggleCollapse = this.toggleCollapse.bind(this);\n    }\n\n    toggleCollapse(type: any) {\n        let { onCollapsed } = this.state;\n\n        if (type === 'responsive' && onCollapsed) {\n            return;\n        }\n\n        this.setState({ onCollapsed: !onCollapsed });\n    }\n\n    render() {\n        let { auth, isMobile } = this.props;\n        let { onCollapsed } = this.state;\n\n        let paramsMobile = {\n            collapsed: false,\n            collapsible: false,\n            onCollapse: this.toggleCollapse,\n            width: 256,\n        };\n        let paramsDesktop = {\n            breakpoint: 'lg',\n            collapsed: onCollapsed,\n            collapsible: true,\n            onCollapse: this.toggleCollapse,\n            width: 256,\n        };\n        let params = isMobile ? paramsMobile : paramsDesktop;\n\n        return (\n            <Layout.Sider {...params} className='MenuLeft'>\n                {!onCollapsed && (\n                    <div className='MenuLeft_Logo d-flex fa-center fj-center'>\n                        <Picture\n                            alt={logo.light.alt}\n                            className='bg-primary'\n                            height='46px'\n                            src={logo.light.url}\n                            title={logo.light.title}\n                        />\n                    </div>\n                )}\n                <Scrollbars\n                    autoHide\n                    style={{ height: isMobile ? 'calc(100vh - 64px)' : 'calc(100vh - 112px)' }}\n                >\n                    <Menu auth={auth} className='MenuLeft_Navigation' mode='inline' theme='dark' />\n                </Scrollbars>\n            </Layout.Sider>\n        );\n    }\n}\n","import * as React from 'react';\n\nimport { Picture } from 'src/shared/components/Picture';\n\nimport { logo } from './constants';\nimport { Menu } from './Menu';\n\ninterface MenuTopProps {\n    auth: string | null;\n}\n\nfunction MenuTopPure({ auth }: MenuTopProps) {\n    return (\n        <div id='MenuTop' className='d-flex'>\n            <Picture\n                alt={logo.light.alt}\n                className='bg-primary px-4'\n                height='46px'\n                src={logo.light.url}\n                title={logo.light.title}\n            />\n            <Menu auth={auth} className='w-100' mode='horizontal' theme='dark' />\n        </div>\n    );\n}\n\nexport const MenuTop = React.memo(MenuTopPure);\n","import * as React from 'react';\nimport Drawer from 'rc-drawer';\n\nimport { useUIContext } from 'src/shared/contexts/UIContext';\n\nimport { MenuLeft } from './MenuLeft';\nimport { MenuTop } from './MenuTop';\n\nrequire('./MainMenu.sass');\n\ninterface MainMenuProps {\n    auth: string | null;\n    isMenuTop?: boolean;\n}\n\nfunction MainMenuPure({ auth, isMenuTop }: MainMenuProps) {\n    let isMobile = useUIContext().isMobile;\n\n    return isMobile ? (\n        <Drawer className='MainMenu_DarkDrawer' getContainer={null} level={null}>\n            <MenuLeft auth={auth} isMobile={isMobile} />\n        </Drawer>\n    ) : isMenuTop ? (\n        <MenuTop auth={auth} />\n    ) : (\n        <MenuLeft auth={auth} isMobile={isMobile} />\n    );\n}\n\nexport const MainMenu = React.memo(MainMenuPure);\n","import { Layout } from 'antd';\nimport React from 'react';\n\nimport { createAuthTokenStorage, exitSession } from 'src/core/graphql/auth';\nimport { useHistory } from 'src/core/route';\n\nimport { getLanguage } from '../pages/SettingPage/helpers';\nimport { Header } from './components/Header/Header';\nimport { Footer } from './components/Footer/Footer';\nimport { MainMenu } from './components/MainMenu/MainMenu';\n\ninterface PageProps {\n    children: React.ReactNode;\n}\n\nexport function Page({ children }: PageProps) {\n    let storage = createAuthTokenStorage();\n    let lang = getLanguage();\n    let { replace } = useHistory();\n\n    function handleLogout() {\n        exitSession();\n        replace('/login');\n    }\n\n    return (\n        <Layout>\n            <MainMenu auth={storage.getToken()} isMenuTop />\n            <Layout>\n                <Layout.Header>\n                    <Header auth={storage.getToken()} lang={lang} logout={handleLogout} />\n                </Layout.Header>\n                <Layout.Content>{children}</Layout.Content>\n                <Layout.Footer>\n                    <Footer />\n                </Layout.Footer>\n            </Layout>\n        </Layout>\n    );\n}\n","import { Card as AntCard } from 'antd';\nimport * as React from 'react';\n\ninterface CardProps extends React.HTMLAttributes<any> {\n    bodyStyle?: React.CSSProperties;\n    children?: React.ReactNode;\n}\n\nexport const Card = React.memo<CardProps>(({ bodyStyle, children, className }) => (\n    <AntCard className={className} bodyStyle={bodyStyle}>\n        {children}\n    </AntCard>\n));\n","export * from './Card';\n","import * as React from 'react';\nimport { Link as LinkRouter, LinkProps as LinkRouterProps } from 'react-router-dom';\n\ninterface LinkProps extends LinkRouterProps {\n    disabled?: boolean;\n}\n\nexport const Link = React.memo<LinkProps>(({ ...props }) => <LinkRouter {...props} />);\n","export * from './Link';\n","import { Setting } from 'src/core/api';\n\nexport function convertArrayOfObjectsToObject(data?: Setting[]) {\n    return data && Object.assign({}, ...data.map((item) => ({ [item.type]: item.value })));\n}\n","module.exports = __webpack_public_path__ + \"static/media/logo-dark.cbf24a77.png\";","import { Menu } from 'src/core/api';\nimport { gql, useQuery } from 'src/core/graphql';\n\nexport const MENUS = gql`\n    query {\n        getMenus {\n            children {\n                icon\n                id\n                key\n                name\n                status\n                url\n            }\n            icon\n            id\n            key\n            name\n            status\n            url\n        }\n    }\n`;\n\nexport const getMenus = (options: any) => useQuery<{ getMenus: Menu[] }>(MENUS, options);\n","module.exports = __webpack_public_path__ + \"static/media/logo-light.dd715352.png\";","import { Breadcrumb as AntBreadcrumb } from 'antd';\nimport * as React from 'react';\n\nimport { BreadcrumbItem } from './BreadcrumbItem';\n\nexport class Breadcrumb extends React.PureComponent<{}> {\n    static Item: typeof BreadcrumbItem;\n\n    render() {\n        let { children } = this.props;\n\n        return <AntBreadcrumb>{children}</AntBreadcrumb>;\n    }\n}\nBreadcrumb.Item = AntBreadcrumb.Item;\n","export * from './Breadcrumb';\n","import * as React from 'react';\n\nimport { Action } from 'src/core/api';\n\nimport { Breadcrumb } from 'src/shared/components/Breadcrumb';\nimport { Capitalized } from 'src/shared/utilities/capitalized';\n\ninterface MasterContentHeaderProps {\n    action: Action;\n    module: string;\n    title: string;\n    to: string;\n}\n\nexport const MasterContentHeader = React.memo<MasterContentHeaderProps>(\n    ({ action, module, title, to }) => (\n        <Breadcrumb>\n            <Breadcrumb.Item>{module}</Breadcrumb.Item>\n            <Breadcrumb.Item href={to}>{title}</Breadcrumb.Item>\n            {action !== 'back' && <Breadcrumb.Item>{Capitalized(action)}</Breadcrumb.Item>}\n        </Breadcrumb>\n    )\n);\n","import * as React from 'react';\n\nimport { Card } from 'src/shared/components/Card';\nimport { Divider } from 'src/shared/components/Divider';\nimport { MasterContentHeader } from 'src/shared/components/Master/components/MasterContentHeader';\n\nrequire('./ReportCard.sass');\n\ninterface ReportCardProps {\n    children?: React.ReactNode;\n    title: string;\n    url: string;\n}\n\nfunction ReportCardPure({ children, title, url }: ReportCardProps) {\n    return (\n        <Card className='ReportCard'>\n            <div className='d-flex fa-center fd-row'>\n                <div className='d-flex fd-column mr-4'>\n                    <MasterContentHeader action='back' module='Report' title={title} to={url} />\n                    <Divider />\n                    {children}\n                </div>\n            </div>\n        </Card>\n    );\n}\n\nexport const ReportCard = React.memo(ReportCardPure);\n","export * from './ReportCard';\n"],"sourceRoot":""}