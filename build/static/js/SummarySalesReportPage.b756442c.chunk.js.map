{"version":3,"sources":["shared/components/DatePicker/DatePicker.tsx","shared/components/DatePicker/DateRangePicker.tsx","shared/components/DatePicker/index.ts","../_util/colors.js","../divider/index.jsx","../breadcrumb/BreadcrumbItem.jsx","../breadcrumb/Breadcrumb.jsx","../node_modules/antd/node_modules/rc-util/es/Children/toArray.js","../breadcrumb/BreadcrumbSeparator.jsx","../breadcrumb/index.jsx","shared/graphql/Sales/schema.gql.ts","app/pages/SummarySalesReportPage/SummarySalesReportPage.tsx","app/pages/SummarySalesReportPage/index.ts"],"names":["DatePicker","React","defaultValue","disabled","format","onChange","picker","value","DateRangePicker","className","placeholder","RangePicker","PresetStatusColorTypes","tuple","PresetColorTypes","__rest","s","e","t","Object","i","p","props","getPrefixCls","customizePrefixCls","type","orientation","children","dashed","restProps","prefixCls","orientationPrefix","classString","classNames","role","BreadcrumbItem","_a","separator","link","omit","overlay","placement","this","defaultItemRender","route","params","routes","paths","isLastItem","name","paramsKeys","RegExp","getBreadcrumbName","href","filterFragment","toArray","ret","Children","forEach","child","isFragment","concat","push","element","Breadcrumb","path","key","childPath","originalPaths","itemRender","breadcrumbName","direction","style","crumbs","warning","index","breadcrumbClassName","BreadcrumbSeparator","SALES_BY_ID","gql","SALES_LIST","SOLD_MEDICINE","SUMMARY_SALES","CREATE_SALES","DELETE_SALES","getSalesById","options","useQuery","getSalesList","getSoldMedicine","getSummarySalesByUser","createSales","useMutation","deleteSales","SummarySalesReportPage","lang","getLanguage","storage","createAuthTokenStorage","useState","end_date","formatDefaultNextDate","formatDate","moment","start_date","formatDefaultDate","date","setDate","queryUser","queryForm","query","getUserByUsername","variables","username","getToken","user","data","querySummarySales","skip","payload","created_by","id","loading","Spin","summarySales","Page","ReportCard","title","url","formatDefaultMoment","_","dateString","summarySalesTitle","Link","target","to","sold","transaction","grand_total","Button","summarySalesButton"],"mappings":"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","file":"static/js/SummarySalesReportPage.b756442c.chunk.js","sourcesContent":["import { DatePicker as AntDatePicker } from 'antd';\nimport { Moment } from 'moment';\nimport * as React from 'react';\n\ninterface DatePickerProps {\n    defaultValue?: Moment;\n    disabled?: boolean;\n    format?: string | string[];\n    picker?: any;\n    value?: Moment;\n\n    onChange?: (value: Moment | null, dateString: string) => void;\n}\n\nexport const DatePicker = React.memo<DatePickerProps>(\n    ({ defaultValue, disabled, format = 'DD-MM-YYYY', onChange, picker, value }) => (\n        <AntDatePicker\n            defaultValue={defaultValue}\n            disabled={disabled}\n            format={format}\n            onChange={onChange}\n            picker={picker}\n            value={value}\n        />\n    )\n);\n","import { DatePicker as AntDatePicker } from 'antd';\nimport { Moment } from 'moment';\nimport * as React from 'react';\n\ninterface DateRangePickerProps {\n    className?: string;\n    defaultValue?: [Moment | null, Moment | null] | null;\n    format?: string | string[];\n    placeholder?: [string, string];\n    value?: [Moment | null, Moment | null] | null;\n\n    onChange?: (values: any, formatString: [string, string]) => void;\n}\n\nexport const DateRangePicker = React.memo<DateRangePickerProps>(\n    ({ className, defaultValue, format = 'DD-MM-YYYY', onChange, placeholder, value }) => (\n        <AntDatePicker.RangePicker\n            className={className}\n            defaultValue={defaultValue}\n            format={format}\n            onChange={onChange}\n            placeholder={placeholder}\n            value={value}\n        />\n    )\n);\n","export * from './DatePicker';\nexport * from './DateRangePicker';\n","import { tuple } from './type';\nexport const PresetStatusColorTypes = tuple('success', 'processing', 'error', 'default', 'warning');\n// eslint-disable-next-line import/prefer-default-export\nexport const PresetColorTypes = tuple('pink', 'red', 'yellow', 'orange', 'cyan', 'green', 'blue', 'purple', 'geekblue', 'magenta', 'volcano', 'gold', 'lime');\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ConfigConsumer } from '../config-provider';\nconst Divider = props => (<ConfigConsumer>\n    {({ getPrefixCls }) => {\n    const { prefixCls: customizePrefixCls, type = 'horizontal', orientation = 'center', className, children, dashed } = props, restProps = __rest(props, [\"prefixCls\", \"type\", \"orientation\", \"className\", \"children\", \"dashed\"]);\n    const prefixCls = getPrefixCls('divider', customizePrefixCls);\n    const orientationPrefix = orientation.length > 0 ? `-${orientation}` : orientation;\n    const classString = classNames(className, prefixCls, `${prefixCls}-${type}`, {\n        [`${prefixCls}-with-text${orientationPrefix}`]: children,\n        [`${prefixCls}-dashed`]: !!dashed,\n    });\n    return (<div className={classString} {...restProps} role=\"separator\">\n          {children && <span className={`${prefixCls}-inner-text`}>{children}</span>}\n        </div>);\n}}\n  </ConfigConsumer>);\nexport default Divider;\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { DownOutlined } from '@ant-design/icons';\nimport omit from 'omit.js';\nimport DropDown from '../dropdown/dropdown';\nimport { ConfigConsumer } from '../config-provider';\nexport default class BreadcrumbItem extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.renderBreadcrumbItem = ({ getPrefixCls }) => {\n            const _a = this.props, { prefixCls: customizePrefixCls, separator, children } = _a, restProps = __rest(_a, [\"prefixCls\", \"separator\", \"children\"]);\n            const prefixCls = getPrefixCls('breadcrumb', customizePrefixCls);\n            let link;\n            if ('href' in this.props) {\n                link = (<a className={`${prefixCls}-link`} {...omit(restProps, ['overlay'])}>\n          {children}\n        </a>);\n            }\n            else {\n                link = (<span className={`${prefixCls}-link`} {...omit(restProps, ['overlay'])}>\n          {children}\n        </span>);\n            }\n            // wrap to dropDown\n            link = this.renderBreadcrumbNode(link, prefixCls);\n            if (children) {\n                return (<span>\n          {link}\n          {separator && separator !== '' && (<span className={`${prefixCls}-separator`}>{separator}</span>)}\n        </span>);\n            }\n            return null;\n        };\n        /**\n         * if overlay is have\n         * Wrap a DropDown\n         */\n        this.renderBreadcrumbNode = (breadcrumbItem, prefixCls) => {\n            const { overlay } = this.props;\n            if (overlay) {\n                return (<DropDown overlay={overlay} placement=\"bottomCenter\">\n          <span className={`${prefixCls}-overlay-link`}>\n            {breadcrumbItem}\n            <DownOutlined />\n          </span>\n        </DropDown>);\n            }\n            return breadcrumbItem;\n        };\n    }\n    render() {\n        return <ConfigConsumer>{this.renderBreadcrumbItem}</ConfigConsumer>;\n    }\n}\nBreadcrumbItem.__ANT_BREADCRUMB_ITEM = true;\nBreadcrumbItem.defaultProps = {\n    separator: '/',\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport toArray from 'rc-util/lib/Children/toArray';\nimport omit from 'omit.js';\nimport BreadcrumbItem from './BreadcrumbItem';\nimport Menu from '../menu';\nimport { ConfigConsumer } from '../config-provider';\nimport warning from '../_util/warning';\nfunction getBreadcrumbName(route, params) {\n    if (!route.breadcrumbName) {\n        return null;\n    }\n    const paramsKeys = Object.keys(params).join('|');\n    const name = route.breadcrumbName.replace(new RegExp(`:(${paramsKeys})`, 'g'), (replacement, key) => params[key] || replacement);\n    return name;\n}\nfunction defaultItemRender(route, params, routes, paths) {\n    const isLastItem = routes.indexOf(route) === routes.length - 1;\n    const name = getBreadcrumbName(route, params);\n    return isLastItem ? <span>{name}</span> : <a href={`#/${paths.join('/')}`}>{name}</a>;\n}\nfunction filterFragment(children) {\n    return toArray(children).map((element) => {\n        if (React.isValidElement(element) && element.type === React.Fragment) {\n            const props = element.props;\n            return props.children;\n        }\n        return element;\n    });\n}\nexport default class Breadcrumb extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getPath = (path, params) => {\n            path = (path || '').replace(/^\\//, '');\n            Object.keys(params).forEach(key => {\n                path = path.replace(`:${key}`, params[key]);\n            });\n            return path;\n        };\n        this.addChildPath = (paths, childPath = '', params) => {\n            const originalPaths = [...paths];\n            const path = this.getPath(childPath, params);\n            if (path) {\n                originalPaths.push(path);\n            }\n            return originalPaths;\n        };\n        this.genForRoutes = ({ routes = [], params = {}, separator, itemRender = defaultItemRender, }) => {\n            const paths = [];\n            return routes.map(route => {\n                const path = this.getPath(route.path, params);\n                if (path) {\n                    paths.push(path);\n                }\n                // generated overlay by route.children\n                let overlay;\n                if (route.children && route.children.length) {\n                    overlay = (<Menu>\n            {route.children.map(child => (<Menu.Item key={child.path || child.breadcrumbName}>\n                {itemRender(child, params, routes, this.addChildPath(paths, child.path, params))}\n              </Menu.Item>))}\n          </Menu>);\n                }\n                return (<BreadcrumbItem overlay={overlay} separator={separator} key={path || route.breadcrumbName}>\n          {itemRender(route, params, routes, paths)}\n        </BreadcrumbItem>);\n            });\n        };\n        this.renderBreadcrumb = ({ getPrefixCls, direction }) => {\n            let crumbs;\n            const _a = this.props, { prefixCls: customizePrefixCls, separator, style, className, routes, children } = _a, restProps = __rest(_a, [\"prefixCls\", \"separator\", \"style\", \"className\", \"routes\", \"children\"]);\n            const prefixCls = getPrefixCls('breadcrumb', customizePrefixCls);\n            if (routes && routes.length > 0) {\n                // generated by route\n                crumbs = this.genForRoutes(this.props);\n            }\n            else if (children) {\n                crumbs = React.Children.map(filterFragment(children), (element, index) => {\n                    if (!element) {\n                        return element;\n                    }\n                    warning(element.type &&\n                        (element.type.__ANT_BREADCRUMB_ITEM === true ||\n                            element.type.__ANT_BREADCRUMB_SEPARATOR === true), 'Breadcrumb', \"Only accepts Breadcrumb.Item and Breadcrumb.Separator as it's children\");\n                    return React.cloneElement(element, {\n                        separator,\n                        key: index,\n                    });\n                });\n            }\n            const breadcrumbClassName = classNames(className, prefixCls, {\n                [`${prefixCls}-rtl`]: direction === 'rtl',\n            });\n            return (<div className={breadcrumbClassName} style={style} {...omit(restProps, ['itemRender', 'linkRender', 'nameRender', 'params'])}>\n        {crumbs}\n      </div>);\n        };\n    }\n    render() {\n        return <ConfigConsumer>{this.renderBreadcrumb}</ConfigConsumer>;\n    }\n}\nBreadcrumb.defaultProps = {\n    separator: '/',\n};\n","import React from 'react';\nimport { isFragment } from 'react-is';\nexport default function toArray(children) {\n  var ret = [];\n  React.Children.forEach(children, function (child) {\n    if (isFragment(child) && child.props) {\n      ret = ret.concat(toArray(child.props.children));\n    } else {\n      ret.push(child);\n    }\n  });\n  return ret;\n}","import * as React from 'react';\nimport { ConfigConsumer } from '../config-provider';\nexport default class BreadcrumbSeparator extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.renderSeparator = ({ getPrefixCls }) => {\n            const { children } = this.props;\n            const prefixCls = getPrefixCls('breadcrumb');\n            return <span className={`${prefixCls}-separator`}>{children || '/'}</span>;\n        };\n    }\n    render() {\n        return <ConfigConsumer>{this.renderSeparator}</ConfigConsumer>;\n    }\n}\nBreadcrumbSeparator.__ANT_BREADCRUMB_SEPARATOR = true;\n","import Breadcrumb from './Breadcrumb';\nimport BreadcrumbItem from './BreadcrumbItem';\nimport BreadcrumbSeparator from './BreadcrumbSeparator';\nBreadcrumb.Item = BreadcrumbItem;\nBreadcrumb.Separator = BreadcrumbSeparator;\nexport default Breadcrumb;\n","import { Sales, SoldMedicine, SummarySales } from 'src/core/api';\nimport { gql, useMutation, useQuery } from 'src/core/graphql';\n\nexport const SALES_BY_ID = gql`\n    query getSalesById($id: ID!) {\n        getSalesById(id: $id) {\n            change_total\n            created_by {\n                name\n            }\n            no\n            date\n            description\n            detail {\n                id\n                medicine {\n                    id\n                    code\n                    name\n                    uom {\n                        id\n                        name\n                    }\n                }\n                qty\n                sell_price\n                sub_total\n            }\n            id\n            grand_total\n            payment_total\n            qty_total\n        }\n    }\n`;\n\nexport const SALES_LIST = gql`\n    query getSalesList($payload: ListPayload) {\n        getSalesList(payload: $payload) {\n            data {\n                no\n                date\n                id\n                qty_total\n                grand_total\n                payment_total\n                change_total\n                updated_by {\n                    id\n                    name\n                }\n            }\n            total\n        }\n    }\n`;\n\nexport const SOLD_MEDICINE = gql`\n    query getSoldMedicine($payload: CustomFilter) {\n        getSoldMedicine(payload: $payload) {\n            date\n            medicine {\n                code\n                name\n            }\n            sold\n        }\n    }\n`;\n\nexport const SUMMARY_SALES = gql`\n    query getSummarySalesByUser($payload: CustomFilter) {\n        getSummarySalesByUser(payload: $payload) {\n            created_by {\n                name\n            }\n            date\n            grand_total\n            sold\n            transaction\n        }\n    }\n`;\n\nconst CREATE_SALES = gql`\n    mutation createSales($payload: CreateSalesPayload) {\n        createSales(payload: $payload) {\n            created_by {\n                name\n            }\n            no\n            date\n            detail {\n                id\n                medicine {\n                    id\n                    code\n                    name\n                    uom {\n                        id\n                        name\n                    }\n                }\n                qty\n                sell_price\n                sub_total\n            }\n        }\n    }\n`;\n\nconst DELETE_SALES = gql`\n    mutation deleteSales($payload: SoftDeletePayload) {\n        deleteSales(payload: $payload) {\n            no\n        }\n    }\n`;\n\nexport const getSalesById = (options: any) =>\n    useQuery<{ getSalesById: Sales }>(SALES_BY_ID, options);\nexport const getSalesList = (options: any) =>\n    useQuery<{ getSalesList: Sales[] }>(SALES_LIST, options);\nexport const getSoldMedicine = (options: any) =>\n    useQuery<{ getSoldMedicine: SoldMedicine }>(SOLD_MEDICINE, options);\nexport const getSummarySalesByUser = (options: any) =>\n    useQuery<{ getSummarySalesByUser: SummarySales }>(SUMMARY_SALES, options);\nexport const createSales = (options: any) =>\n    useMutation<{ createSales: Sales }>(CREATE_SALES, options);\nexport const deleteSales = (options: any) =>\n    useMutation<{ deleteSales: Sales }>(DELETE_SALES, options);\n","import moment from 'moment';\nimport React from 'react';\n\nimport { Page } from 'src/app/shell/Page';\n\nimport { SummarySales } from 'src/core/api';\n\nimport { Button } from 'src/shared/components/Button';\nimport { DatePicker } from 'src/shared/components/DatePicker';\nimport { Link } from 'src/shared/components/Link';\nimport { ReportCard } from 'src/shared/components/ReportCard';\nimport { Spin } from 'src/shared/components/Spin';\nimport { queryForm } from 'src/shared/graphql';\nimport { createAuthTokenStorage } from 'src/core/graphql/auth';\nimport { getSummarySalesByUser } from 'src/shared/graphql/Sales/schema.gql';\nimport { getUserByUsername } from 'src/shared/graphql/User/schema.gql';\nimport {\n    formatDate,\n    formatDefaultDate,\n    formatDefaultMoment,\n    formatDefaultNextDate,\n} from 'src/shared/helpers/formatDate';\n\nimport { getLanguage } from '../SettingPage/helpers';\nimport { summarySalesButton, summarySalesTitle } from './constants';\n\nexport const SummarySalesReportPage = () => {\n    let lang = getLanguage();\n    let storage = createAuthTokenStorage();\n    let [date, setDate] = React.useState({\n        end_date: formatDefaultNextDate(formatDate(moment())),\n        start_date: formatDefaultDate(formatDate(moment())),\n    });\n    let queryUser = queryForm({\n        query: getUserByUsername,\n        variables: { username: storage.getToken() },\n    });\n    let user = queryUser.data?.getUserByUsername;\n    let querySummarySales = queryForm({\n        skip: !user,\n        query: getSummarySalesByUser,\n        variables: {\n            payload: {\n                created_by: user && user.id,\n                start_date: date.start_date,\n                end_date: date.end_date,\n            },\n        },\n    });\n    if (queryUser.loading || querySummarySales.loading) return <Spin />;\n\n    let summarySales: SummarySales = querySummarySales.data?.getSummarySalesByUser;\n\n    function handleDateRange(_: any, dateString: string) {\n        setDate({\n            end_date: formatDefaultNextDate(dateString),\n            start_date: formatDefaultDate(dateString),\n        });\n    }\n\n    return (\n        <Page>\n            <div className='d-flex fd-row fj-around mx-8 my-8'>\n                <ReportCard title='Summary Sales' url='/summary_sales'>\n                    <DatePicker\n                        defaultValue={formatDefaultMoment(date.start_date)}\n                        onChange={handleDateRange}\n                    />\n                    <div className='d-flex fa-center fd-row mt-4'>\n                        <div className='tw-bold mr-4'>{summarySalesTitle[lang]} :</div>\n                        <Link\n                            target='_blank'\n                            // eslint-disable-next-line max-len\n                            to={`/summary_sales_report?user=${user.name}&date=${summarySales.date}&sold=${summarySales.sold}&transaction=${summarySales.transaction}&total=${summarySales.grand_total}`}\n                        >\n                            <Button type='default'>{summarySalesButton[lang]}</Button>\n                        </Link>\n                    </div>\n                </ReportCard>\n            </div>\n        </Page>\n    );\n};\n","export { SummarySalesReportPage as default } from './SummarySalesReportPage';\n"],"sourceRoot":""}